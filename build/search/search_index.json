{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \ud83d\udd17 Hey, welcome! This is some unofficial documentation of the Guilded user API. Please read the Terms of Use before using the API. This documentation is on GitHub , so you know what to do there. Userbots & You \ud83d\udd17 Using the API to 'bot' your user account is a gray area in terms of ToU compliance. For this reason, these pages do not condone automating a user account and they exist solely for educational purposes. There is not yet any publicly available bot API like there is in Discord. Support \ud83d\udd17 Need some help? Come ask over at the community API server ! ( or here if you don't have the guilded client installed )","title":"Introduction"},{"location":"#introduction","text":"Hey, welcome! This is some unofficial documentation of the Guilded user API. Please read the Terms of Use before using the API. This documentation is on GitHub , so you know what to do there.","title":"Introduction"},{"location":"#userbots-you","text":"Using the API to 'bot' your user account is a gray area in terms of ToU compliance. For this reason, these pages do not condone automating a user account and they exist solely for educational purposes. There is not yet any publicly available bot API like there is in Discord.","title":"Userbots &amp; You"},{"location":"#support","text":"Need some help? Come ask over at the community API server ! ( or here if you don't have the guilded client installed )","title":"Support"},{"location":"images/","text":"Images \ud83d\udd17 Here is an (incomplete) selection of \"official images\" collected from the Guilded client & website. They are owned by guilded.gg and are presented here without approval from Guilded/guilded.gg. Members \ud83d\udd17 Members (in color, from /jobs) \ud83d\udd17 Recruitment \ud83d\udd17 Overview \ud83d\udd17 Forums \ud83d\udd17 Calendar \ud83d\udd17 Docs \ud83d\udd17 Media \ud83d\udd17 Roster \ud83d\udd17 Streams \ud83d\udd17 Matches \ud83d\udd17 Nothing Here \ud83d\udd17 Gilmoji \ud83d\udd17 Default Avatars \ud83d\udd17 1 \ud83d\udd17 2 \ud83d\udd17 3 \ud83d\udd17 4 \ud83d\udd17 5 \ud83d\udd17 Denied \ud83d\udd17","title":"Images"},{"location":"images/#images","text":"Here is an (incomplete) selection of \"official images\" collected from the Guilded client & website. They are owned by guilded.gg and are presented here without approval from Guilded/guilded.gg.","title":"Images"},{"location":"images/#members","text":"","title":"Members"},{"location":"images/#members-in-color-from-jobs","text":"","title":"Members (in color, from /jobs)"},{"location":"images/#recruitment","text":"","title":"Recruitment"},{"location":"images/#overview","text":"","title":"Overview"},{"location":"images/#forums","text":"","title":"Forums"},{"location":"images/#calendar","text":"","title":"Calendar"},{"location":"images/#docs","text":"","title":"Docs"},{"location":"images/#media","text":"","title":"Media"},{"location":"images/#roster","text":"","title":"Roster"},{"location":"images/#streams","text":"","title":"Streams"},{"location":"images/#matches","text":"","title":"Matches"},{"location":"images/#nothing-here","text":"","title":"Nothing Here"},{"location":"images/#gilmoji","text":"","title":"Gilmoji"},{"location":"images/#default-avatars","text":"","title":"Default Avatars"},{"location":"images/#1","text":"","title":"1"},{"location":"images/#2","text":"","title":"2"},{"location":"images/#3","text":"","title":"3"},{"location":"images/#4","text":"","title":"4"},{"location":"images/#5","text":"","title":"5"},{"location":"images/#denied","text":"","title":"Denied"},{"location":"reference/","text":"Reference \ud83d\udd17 On a conceptual level, Discord and Guilded's APIs both function similarly. To quote Discord's reference documentation : [The API] is based around two core layers, a HTTPS/REST API for general operations, and persistent secure WebSocket based connection for sending and subscribing to real-time events. Base URL https://www.guilded.gg/api Error Messages \ud83d\udd17 Your typical error message should look like this: { \"code\" : \"YouDidBadError\" , \"message\" : \"you did bad. here is how you did bad. do better.\" } ... along with an appropriate HTTP status code . Authentication \ud83d\udd17 As mentioned in the Intro page , there is no bot API. In order to automate an application on the API, you would have to use a user account. For the HTTP API, authentication is not passed through the headers, but the JSON body. Quick Authentication How-To \ud83d\udd17 POST /login Logs you into Guilded. Important data here is the returned Set-Cookie header, which you need to pass as a cookie header when connecting to the gateway . JSON Parameters Field Type Description Required email string the account's email true password string the account's password true Encryption \ud83d\udd17 The REST and WebSocket APIs are 'secure' (HTTPS, WSS). I am unsure of any other steps Guilded takes to secure data, if any. Snowflakes & UUIDs \ud83d\udd17 Unlike Discord, Guilded uses UUIDs for its unique IDs. Because of this, none of the same properties apply as to Snowflakes. Generating UUIDs \ud83d\udd17 For some endpoints, you will have to Bring Your Own UUID (BYOU). Worry not - this is typically a trivial task. Most languages should come with a way to generate a compliant UUID with ease, or have a 3rd-party library for such a purpose: Method Language uuid.uuid1() Python uuid.uuidv4() JavaScript uuid-random.uuid() JavaScript Generic Object IDs \ud83d\udd17 These are 8-character, probably-meaningless IDs that Guilded uses in lieu of Snowflakes or UUIDs. They are used for objects like Teams , Groups , and Users . ISO8601 Date/Time \ud83d\udd17 Guilded utilizes the ISO8601 format for most Date/Times returned. This format is referred to as type ISO8601 timestamp within tables in this documentation. Nullable and Optional Resource Fields \ud83d\udd17 Resource fields that may contain a null value have types that are prefixed with a question mark. Resource fields that are optional have names that are suffixed with a question mark. Example Nullable and Optional Fields Field Type optional_field? string nullable_field ?string optional_and_nullable_field? ?string HTTP API \ud83d\udd17 Rate Limiting \ud83d\udd17 The HTTP API has very loose rate limits, most likely due to it not being written for automation. Because of this, we do not know much about how rate limiting works on Guilded. A good rule of thumb is to not spam the API with repetitive requests and to simply stay reasonable. Gateway (WebSocket) API \ud83d\udd17 The Gateway API is used for maintaining persistent, stateful websocket connections between your client and Guilded servers. These connections are used for receiving real-time events your client can use to track and update local state. For information on opening Gateway connections, please see the Gateway API section. Message Formatting \ud83d\udd17 Guilded uses markdown for writing messages in clients. Message are returned via the API in a very 'stacked' format. Each aspect of a message's content, such as text formatting, a mention, or anything else, is provided in a different leaf of the current node. Fortunately, this is not a format you have to send ; you can instead use pure markdown by providing markdown-plain-text as your type . todo: fact check above Image Formatting \ud83d\udd17 Image Base URLs https://img.guildedcdn.com/ https://s3-us-west-2.amazonaws.com/www.guilded.gg/ Guilded uses hashes for its images. These hashes are not returned alone in most HTTP API requests, however--instead you are returned a full URL on the Amazon AWS platform. Below are the formats, size limitations, and CDN endpoints for images in Guilded. The returned format can be changed by changing the extension name at the end of the URL. The returned size can be changed by appending a -{Size} to the URL, just before the file extension. See below for available size formats. It is important to note that, while URLs using the CDN domain are shorter than, and serve the same purpose as, AWS URLs, they will not display properly in embeds (in constrast to AWS URLs). Image Formats Name Extension PNG .png aPNG .png JPEG .jpg, .jpeg WebP .webp GIF .gif CDN Endpoints Type Path Supports User Avatar UserAvatar/hash.png PNG, GIF Profile Banner UserBanner/hash.png PNG Image in Chat ContentMedia/hash.webp WebP Team Emoji CustomReaction/hash.webp WebP, aPNG Team Icon TeamAvatar/hash.png PNG Team Banner TeamBanner/hash.png PNG Sizes Your -{Size} can be one of -Small , -Medium , -Large , and sometimes -Hero . Banners can only be Hero , but avatars are never Hero . Example CDN URL The below example is for a \"large\" sized User Avatar on AWS: https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserAvatar/{hash}-Large.png Upload a File \ud83d\udd17 POST https://media.guilded.gg/media/upload Returns {\"url\": \"https://a_url_to_your_uploaded_file.png\"} on success. Form Data Field Type Description file binary data the data of the file Query Args Field Type Description Required Accepted Values dynamicMediaTypeId string the type of media that you are uploading true a valid dynamic media type Dynamic Media Types Type Description CustomReaction custom server emoji ContentMedia attachment in chat UserAvatar user avatar UserBanner profile banner TeamAvatar team icon TeamBanner team banner Binary File Data This can probably be handled by your HTTP library/something built-in to your lang. Here are some code examples: Python # with aiohttp import aiohttp async def upload_file(path_to_file, media_type): file = open(path_to_file, 'rb') # or another bytes-like object async with aiohttp.ClientSession() as session: response = await session.post( 'https://media.guilded.gg/media/upload', data={'file': file}, params={'dynamicMediaTypeId': media_type} ) data = await response.json() return data['url'] # with requests import requests def upload_file(path_to_file, media_type): file = open(path_to_file, 'rb') # or another bytes-like object response = requests.post( 'https://media.guilded.gg/media/upload', data={'file': file}, params={'dynamicMediaTypeId': media_type} ) data = response.json() return data['url']","title":"Reference"},{"location":"reference/#reference","text":"On a conceptual level, Discord and Guilded's APIs both function similarly. To quote Discord's reference documentation : [The API] is based around two core layers, a HTTPS/REST API for general operations, and persistent secure WebSocket based connection for sending and subscribing to real-time events.","title":"Reference"},{"location":"reference/#error-messages","text":"Your typical error message should look like this: { \"code\" : \"YouDidBadError\" , \"message\" : \"you did bad. here is how you did bad. do better.\" } ... along with an appropriate HTTP status code .","title":"Error Messages"},{"location":"reference/#authentication","text":"As mentioned in the Intro page , there is no bot API. In order to automate an application on the API, you would have to use a user account. For the HTTP API, authentication is not passed through the headers, but the JSON body.","title":"Authentication"},{"location":"reference/#quick-authentication-how-to","text":"POST /login Logs you into Guilded. Important data here is the returned Set-Cookie header, which you need to pass as a cookie header when connecting to the gateway .","title":"Quick Authentication How-To"},{"location":"reference/#encryption","text":"The REST and WebSocket APIs are 'secure' (HTTPS, WSS). I am unsure of any other steps Guilded takes to secure data, if any.","title":"Encryption"},{"location":"reference/#snowflakes-uuids","text":"Unlike Discord, Guilded uses UUIDs for its unique IDs. Because of this, none of the same properties apply as to Snowflakes.","title":"Snowflakes &amp; UUIDs"},{"location":"reference/#generating-uuids","text":"For some endpoints, you will have to Bring Your Own UUID (BYOU). Worry not - this is typically a trivial task. Most languages should come with a way to generate a compliant UUID with ease, or have a 3rd-party library for such a purpose: Method Language uuid.uuid1() Python uuid.uuidv4() JavaScript uuid-random.uuid() JavaScript","title":"Generating UUIDs"},{"location":"reference/#generic-object-ids","text":"These are 8-character, probably-meaningless IDs that Guilded uses in lieu of Snowflakes or UUIDs. They are used for objects like Teams , Groups , and Users .","title":"Generic Object IDs"},{"location":"reference/#iso8601-datetime","text":"Guilded utilizes the ISO8601 format for most Date/Times returned. This format is referred to as type ISO8601 timestamp within tables in this documentation.","title":"ISO8601 Date/Time"},{"location":"reference/#nullable-and-optional-resource-fields","text":"Resource fields that may contain a null value have types that are prefixed with a question mark. Resource fields that are optional have names that are suffixed with a question mark.","title":"Nullable and Optional Resource Fields"},{"location":"reference/#http-api","text":"","title":"HTTP API"},{"location":"reference/#rate-limiting","text":"The HTTP API has very loose rate limits, most likely due to it not being written for automation. Because of this, we do not know much about how rate limiting works on Guilded. A good rule of thumb is to not spam the API with repetitive requests and to simply stay reasonable.","title":"Rate Limiting"},{"location":"reference/#gateway-websocket-api","text":"The Gateway API is used for maintaining persistent, stateful websocket connections between your client and Guilded servers. These connections are used for receiving real-time events your client can use to track and update local state. For information on opening Gateway connections, please see the Gateway API section.","title":"Gateway (WebSocket) API"},{"location":"reference/#message-formatting","text":"Guilded uses markdown for writing messages in clients. Message are returned via the API in a very 'stacked' format. Each aspect of a message's content, such as text formatting, a mention, or anything else, is provided in a different leaf of the current node. Fortunately, this is not a format you have to send ; you can instead use pure markdown by providing markdown-plain-text as your type . todo: fact check above","title":"Message Formatting"},{"location":"reference/#image-formatting","text":"","title":"Image Formatting"},{"location":"reference/#upload-a-file","text":"POST https://media.guilded.gg/media/upload Returns {\"url\": \"https://a_url_to_your_uploaded_file.png\"} on success.","title":"Upload a File"},{"location":"resources/channel/","text":"Channels \ud83d\udd17 Channel Object \ud83d\udd17 Represents a team or DM channel. Team Channel Structure Field Type Description id uuid the id of this channel type string the type of channel createdAt ISO8601 timestamp when this channel was created createdBy user id who created this channel updatedAt ?ISO8601 timestamp when this channel was last modified name string the name of this channel contentType string the content type of channel (text, voice, etc) archivedAt ?ISO8601 timestamp if this channel is archived, this is when it was archived parentChannelId ?uuid if this channel has a parent channel, this is that channel's id autoArchiveAt ?ISO8601 timestamp when this channel will be automatically archived (only applicable to threads) deletedAt ?ISO8601 timestamp if this channel is deleted, this is when it was deleted archivedBy ?user id if this channel is archived, this is who archived it description ?string the channel description createdByWebhookId ?uuid if a webhook created this channel, this is the webhook's id archivedByWebhookId ?uuid if a webhook archived this channel, this is the webhook's id teamId ?team id if this is a team channel (not a DM channel), this is the team's id channelCategoryId ?uuid if this channel is in a category, this is the category's id addedAt ?ISO8601 timestamp ??? channelId ?uuid same as id isRoleSynced ?bool if this channel's roles are synced with the linked Discord guild's roles roles ?array a list of roles that (have overwrites in | are synced with) this channel userPermissions ?array a list of users who have overwrites in this channel tournamentRoles ?array ??? isPublic bool whether this channel is marked as public (can be seen without being a member of the team) priority integer ??? groupId ?group id if this is a team channel, this is the group's id this channel belongs to settings ??? ??? groupType string ??? rolesById dictionary mapping of roleId: role object with undescript permissions tournamentRolesById dictionary ??? createdByInfo dictionary contains the id , name , profilePicture , and profilePictureSm of the user who created this channel DM Channel Structure Field Type Description id uuid the id of this channel type string the type of channel name ?string the name of this channel (group dms?) description ?string the description of this channel (group dms???) users array list of users in this dm (including yourself) createdAt ISO8601 timestamp when this channel was created createdBy user id the user's id who created this dm updatedAt ISO8601 timestamp when this channel was last updated contentType string the content type of channel . should always be 'chat' archivedAt ?ISO8601 timestamp when this channel was archived autoArchiveAt ?ISO8601 timestamp when this channel will automatically be archived archivedBy ? user id the user's id who archived this channel parentChannelId ?uuid this channel's parent id deletedAt ?ISO8601 timestamp when this channel was deleted createdByWebhookId ? webhook id the webhook's id that created this channel archivedByWebhookId ? webhook id the webhook's id that archived this channel dmType string the dm type of channel. known values: 'Default' ownerId user id the user's id who owns this dm voiceParticipants? array list of users in the dm's voice call Channel Types Type Description Team a channel within a server DM a direct message between users Channel Content Types Type Description chat a chat (text) channel voice a voice channel forum a forum channel doc a docs channel Example Team Chat Channel { \"priority\" : 4 , \"id\" : \"d2242862-401c-42f8-9ce2-0c75977475a6\" , \"type\" : \"Team\" , \"name\" : \"general\" , \"description\" : \"wacky hi-jinks ensue!\" , \"settings\" : null , \"roles\" : null , \"rolesById\" : {}, \"tournamentRolesById\" : {}, \"teamId\" : \"4R5q39VR\" , \"channelCategoryId\" : null , \"addedAt\" : null , \"channelId\" : \"d2242862-401c-42f8-9ce2-0c75977475a6\" , \"isRoleSynced\" : null , \"isPublic\" : false , \"groupId\" : \"WD56qLmd\" , \"createdAt\" : \"2020-07-31T18:51:19.563Z\" , \"createdBy\" : \"EdVMVKR4\" , \"updatedAt\" : \"2020-07-31T18:51:19.563Z\" , \"contentType\" : \"chat\" , \"archivedAt\" : null , \"parentChannelId\" : null , \"autoArchiveAt\" : null , \"deletedAt\" : null , \"archivedBy\" : null , \"createdByWebhookId\" : null , \"archivedByWebhookId\" : null , \"userPermissions\" : null , \"tournamentRoles\" : null , \"voiceParticipants\" : [], \"userStreams\" : [] } Example DM Channel { \"id\" : \"f695a133-3812-4db4-b733-64a1efdf8fd2\" , \"type\" : \"DM\" , \"name\" : null , \"description\" : null , \"users\" : [ { \"id\" : \"EdVMVKR4\" , \"name\" : \"shay\" , \"badges\" : null , \"nickname\" : null , \"addedAt\" : \"2021-03-18T19:46:18.536991+00:00\" , \"isOwner\" : true , \"channelId\" : \"f695a133-3812-4db4-b733-64a1efdf8fd2\" , \"removedAt\" : null , \"userStatus\" : { \"content\" : { \"object\" : \"value\" , \"document\" : { \"data\" : {}, \"nodes\" : [ { \"data\" : {}, \"type\" : \"paragraph\" , \"nodes\" : [ { \"leaves\" : [ { \"text\" : \"g.gg/guilded-api\" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" }, { \"data\" : { \"reaction\" : { \"id\" : 294745 , \"customReaction\" : { \"id\" : 294745 , \"name\" : \"blobcouple\" , \"png\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/448cff53087b93e72298bae9d47708f1-Full.webp?w=120&h=120\" , \"webp\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/448cff53087b93e72298bae9d47708f1-Full.webp?w=120&h=120\" , \"apng\" : null }, \"customReactionId\" : 294745 } }, \"type\" : \"reaction\" , \"nodes\" : [ { \"leaves\" : [ { \"text\" : \":blobcouple:\" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" } ], \"object\" : \"inline\" }, { \"leaves\" : [ { \"text\" : \"g.gg/blob-emoji \" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" }, { \"data\" : { \"reaction\" : { \"id\" : 294677 , \"customReaction\" : { \"id\" : 294677 , \"name\" : \"blobpats\" , \"png\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/ff03be6efe491bc934b1c217d70da9ce-Full.webp?w=120&h=120\" , \"webp\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/ff03be6efe491bc934b1c217d70da9ce-Full.webp?w=120&h=120\" , \"apng\" : null }, \"customReactionId\" : 294677 } }, \"type\" : \"reaction\" , \"nodes\" : [ { \"leaves\" : [ { \"text\" : \":blobpats:\" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" } ], \"object\" : \"inline\" } ], \"object\" : \"block\" } ], \"object\" : \"document\" } }, \"customReactionId\" : 294765 , \"customReaction\" : { \"id\" : 294765 , \"name\" : \"ablobwobwork\" , \"png\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/d7cf013a4d01460a81186e65f1f8c12a-Full.webp?w=120&h=120&ia=1\" , \"webp\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/d7cf013a4d01460a81186e65f1f8c12a-Full.webp?w=120&h=120&ia=1\" , \"apng\" : null } }, \"profilePicture\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserAvatar/74bfc8be9425a926a1f48d9b078509bc-Large.png?w=450&h=450\" , \"profileBannerBlur\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserBanner/acaa9d0f78dd8cdd93f3ce44d14c0260-Hero.png?w=1500&h=500\" , \"userPresenceStatus\" : 1 }, { \"id\" : \"2d2Wg8Pm\" , \"name\" : \"GAPI Testing Account\" , \"badges\" : null , \"nickname\" : null , \"addedAt\" : \"2021-03-18T19:46:18.536991+00:00\" , \"isOwner\" : false , \"channelId\" : \"f695a133-3812-4db4-b733-64a1efdf8fd2\" , \"removedAt\" : null , \"userStatus\" : { \"content\" : null , \"customReactionId\" : null }, \"profilePicture\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserAvatar/ca66e6624c1e6706c7c200b3759572cf-Large.png?w=450&h=450\" , \"profileBannerBlur\" : null , \"userPresenceStatus\" : \"2\" } ], \"DMType\" : \"Default\" , \"lastMessage\" : { \"id\" : \"a70946a5-5053-44b0-8573-fd652052426e\" , \"content\" : { \"object\" : \"value\" , \"document\" : { \"data\" : {}, \"nodes\" : [ { \"data\" : {}, \"type\" : \"paragraph\" , \"nodes\" : [ { \"leaves\" : [ { \"text\" : \"hey docs! \" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" }, { \"data\" : { \"reaction\" : { \"id\" : 90001815 , \"customReactionId\" : 90001815 , \"customReaction\" : { \"id\" : 90001815 , \"name\" : \"tada\" , \"png\" : null , \"webp\" : null , \"apng\" : null } } }, \"type\" : \"reaction\" , \"nodes\" : [ { \"leaves\" : [ { \"text\" : \":tada:\" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" } ], \"object\" : \"inline\" }, { \"leaves\" : [ { \"text\" : \" \" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" } ], \"object\" : \"block\" } ], \"object\" : \"document\" } }, \"type\" : \"default\" , \"createdBy\" : \"EdVMVKR4\" , \"createdAt\" : \"2021-03-18T19:46:25.697Z\" , \"editedAt\" : null , \"deletedAt\" : null , \"webhookId\" : null , \"botId\" : null }, \"createdAt\" : \"2021-03-18T19:46:18.536Z\" , \"createdBy\" : \"EdVMVKR4\" , \"updatedAt\" : \"2021-03-18T19:46:18.536Z\" , \"contentType\" : \"chat\" , \"archivedAt\" : null , \"parentChannelId\" : null , \"autoArchiveAt\" : null , \"deletedAt\" : null , \"archivedBy\" : null , \"createdByWebhookId\" : null , \"archivedByWebhookId\" : null , \"dmType\" : \"Default\" , \"ownerId\" : \"EdVMVKR4\" , \"voiceParticipants\" : [] } Message Object \ud83d\udd17 Represents a message sent in a channel within Guilded. Message Structure Field Type Description id uuid id of the message channelId channel id id of the channel the message was sent in createdBy user id the author's id of this message content message content object contents of the message (including text, embeds, mentions, and attachments) createdAt ISO8601 timestamp when this message was sent editedAt ?ISO8601 timestamp when this message was edited (or null if never) deletedAt ?ISO8601 timestamp when this message was deleted (or null if it has not been deleted) reactions array of reaction objects reactions to the message isPinned boolean whether this message is pinned pinnedBy ?user id if the message is pinned, this is the user's id who pinned it webhookId ?user id if the message is generated by a webhook, this is the webhook's id botId? user id if the message is generated by a bot, this is the bot's id type string type of message. usually default Example Message { \"id\" : \"b943384a-d951-4323-8e26-8e3e6b7c431a\" , \"content\" : { \"object\" : \"value\" , \"document\" : { \"object\" : \"document\" , \"data\" : {}, \"nodes\" : [ { \"object\" : \"block\" , \"type\" : \"paragraph\" , \"data\" : {}, \"nodes\" : [ { \"object\" : \"text\" , \"leaves\" : [ { \"object\" : \"leaf\" , \"text\" : \"cool message with an \" , \"marks\" : [] } ] }, { \"object\" : \"inline\" , \"type\" : \"reaction\" , \"data\" : { \"reaction\" : { \"id\" : 90001815 , \"customReactionId\" : 90001815 } }, \"nodes\" : [ { \"object\" : \"text\" , \"leaves\" : [ { \"object\" : \"leaf\" , \"text\" : \":tada:\" , \"marks\" : [] } ] } ] }, { \"object\" : \"text\" , \"leaves\" : [ { \"object\" : \"leaf\" , \"text\" : \" emoji, some \" , \"marks\" : [] }, { \"object\" : \"leaf\" , \"text\" : \"bold formatting\" , \"marks\" : [ { \"object\" : \"mark\" , \"type\" : \"italic\" , \"data\" : {} } ] }, { \"object\" : \"leaf\" , \"text\" : \", maybe even a \" , \"marks\" : [] } ] }, { \"object\" : \"inline\" , \"type\" : \"reaction\" , \"data\" : { \"reaction\" : { \"id\" : 294637 , \"customReactionId\" : 294637 } }, \"nodes\" : [ { \"object\" : \"text\" , \"leaves\" : [ { \"object\" : \"leaf\" , \"text\" : \":thinkingwithblobs:\" , \"marks\" : [] } ] } ] }, { \"object\" : \"text\" , \"leaves\" : [ { \"object\" : \"leaf\" , \"text\" : \" custom emoji?\" , \"marks\" : [] } ] } ] } ] } } } Unfurl Embed Object \ud83d\udd17 Unfurl Embed Structure Info All of the below fields are optional and nullable. Field Type Description ogTitle string og:title ogDescription string og:description ogSiteName string og:site_name ogUrl string og:url ogImage.url string proxied og:image siteType string doesn't seem to line up with og:type Example Unfurl Embed { \"ogTitle\" : \"Guilded - Chat for Gaming Communities\" , \"ogDescription\" : \"Guilded upgrades your group chat and equips your server with integrated event calendars, forums, and more \u2013 100% free.\" , \"ogSiteName\" : \"Guilded - Chat for Gaming Communities\" , \"ogUrl\" : \"https://www.guilded.gg/\" , \"ogImage\" : { \"url\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/ExternalOGEmbedImage/11066c41a2569c628f119f2b2e32aa00-Full.png?w=1024&h=1024\" }, \"siteType\" : \"guilded\" } Embed Object \ud83d\udd17 Embeds objects in Guilded are the same as in Discord. Embed Structure Field Type Description title? string title of embed description? string description of embed url? string url of embed timestamp? ISO8601 timestamp timestamp of embed content color? integer color code of the embed footer? embed footer object footer information image? embed image object image information thumbnail? embed thumbnail object thumbnail information video? embed video object video information provider? embed provider object provider information author? embed author object author information fields? array of embed field objects fields information Embed Thumbnail Structure Field Type Description url? string source url of thumbnail. only supports http(s) proxy_url? string a proxied url of the thumbnail height? integer height of thumbnail width? integer width of thumbnail Embed Video Structure Field Type Description url? string source url of video proxy_url? string a proxied url of the video height? integer height of video width? integer width of video Embed Image Structure Field Type Description url? string source url of image. only supports http(s) proxy_url? string a proxied url of the image height? integer height of image width? integer width of image Embed Provider Structure Field Type Description name? string name of provider url? string url of provider Embed Author Structure Field Type Description name? string name of author url? string url of author icon_url? string url of author icon. only supports http(s) proxy_icon_url? string a proxied url of author icon Embed Footer Structure Field Type Description text string footer text icon_url? string url of footer icon. only supports http(s) proxy_icon_url? string a proxied url of footer icon Embed Field Structure Field Type Description name string name of the field value string value of the field inline? boolean whether or not this field should display inline Get Embed for URL \ud83d\udd17 GET /content/embed_info Generate embed data for a specific URL. Returns a special \"unfurl embed\" object on response. Query Params Field Type Description Required url string the url to get the embed for true Embed Limits \ud83d\udd17 To facilitate showing rich content, rich embeds do not follow the traditional limits of message content. However, some limits are still in place to prevent excessively large embeds. The following table describes the limits: Limits Info The following table is left for placeholder purposes. Embeds can be very expansive and I have yet to see what their limits are (as well as how many you can fit in a message). All of the following limits are measured inclusively. Leading and trailing whitespace characters are not included (they are trimmed automatically). Field Limit title ??? characters description ??? characters fields Up to ??? field objects field.name ??? characters field.value ??? characters footer.text ??? characters author.name ??? characters Additionally, the characters in all title , description , field.name , field.value , footer.text , and author.name fields must not exceed ??? characters in total. Get Channel \ud83d\udd17 GET /channels/{ channel.id } Get a channel by ID. Returns a channel object . Modify Channel \ud83d\udd17 PATCH /channels/{ channel.id } Update a channel's settings. Requires the MANAGE_CHANNELS permission for the guild. Returns a channel on success, and a 400 BAD REQUEST on invalid parameters. Fires a Channel Update Gateway event. If modifying a category, individual Channel Update events will fire for each child channel that also changes. If modifying permission overwrites, the MANAGE_ROLES permission is required. Only permissions your bot has in the guild or channel can be allowed/denied (unless your bot has a MANAGE_ROLES overwrite in the channel). All JSON parameters are optional. JSON Params Field Type Description Channel Type name string 2-100 character channel name All type integer the type of channel ; only conversion between text and news is supported and only in guilds with the \"NEWS\" feature Text, News position ?integer the position of the channel in the left-hand listing All topic ?string 0-1024 character channel topic Text, News nsfw ?boolean whether the channel is nsfw Text, News, Store rate_limit_per_user ?integer amount of seconds a user has to wait before sending another message (0-21600); bots, as well as users with the permission manage_messages or manage_channel , are unaffected Text bitrate ?integer the bitrate (in bits) of the voice channel; 8000 to 96000 (128000 for VIP servers) Voice user_limit ?integer the user limit of the voice channel; 0 refers to no limit, 1 to 99 refers to a user limit Voice parent_id ?snowflake id of the new parent category for a channel Text, News, Store, Voice Delete/Close Channel \ud83d\udd17 DELETE /channels/{ channel.id } Delete a channel. Requires the MANAGE_CHANNELS permission for the team. Deleting a category does not delete its child channels; they will have their categoryId removed and a Channel Update Gateway event will fire for each of them. Returns a channel object on success. Fires a Channel Delete Gateway event. Warn Deleting a guild channel cannot be undone. Use this with caution, as it is impossible to undo this action when performed on a guild channel. In contrast, when used with a private message, it is possible to undo the action by opening a private message with the recipient again. Info For Community guilds, the Rules or Guidelines channel and the Community Updates channel cannot be deleted. Get Channel Messages \ud83d\udd17 GET /channels/{ channel.id }/messages Returns the messages for a channel. Does not require authentication. Returns an array of message objects and a boolean hasPastMessages detailing if there are messages preceeding this array on success. Query string parameter limit has been tested up to 50,000. Query String Params Field Type Description Required Default limit integer max number of messages to return (0-???) false 51 Get Channel Message \ud83d\udd17 GET /content/route/metadata?route=//channels/{ channel.id }/chat?messageId={ message.id } Get a specific message in the channel. Returns a message object on success. Query String Params Field Type Description Required route string (metadata path) the channel to get the message from true messageId message id the message to get true Send Message \ud83d\udd17 POST /channels/{ channel.id }/messages Post a message to a team channel or DM channel. Returns a message object. Fires a Message Create Gateway event. The actual uploading of attachments is a separate endpoint. See how to upload files . Use a dynamicMediaTypeId of ContentMedia . The concept of \"replies\" do not exist, but you may begin a new thread with a message key to send your message as a new thread. JSON Params Info Note that when sending application/json you must send at least one of content or embed . Field Type Description messageId uuid the id for this message content [message content] the message contents (up to 4,000 characters of text) Example Request Body { \"messageId\" : \"b943384a-d951-4323-8e26-8e3e6b7c431a\" , \"content\" : { \"object\" : \"value\" , \"document\" : { \"object\" : \"document\" , \"data\" : {}, \"nodes\" : [ { \"object\" : \"block\" , \"type\" : \"paragraph\" , \"data\" : {}, \"nodes\" : [ { \"object\" : \"text\" , \"leaves\" : [ { \"object\" : \"leaf\" , \"text\" : \"cool message with an \" , \"marks\" : [] } ] }, { \"object\" : \"inline\" , \"type\" : \"reaction\" , \"data\" : { \"reaction\" : { \"id\" : 90001815 , \"customReactionId\" : 90001815 } }, \"nodes\" : [ { \"object\" : \"text\" , \"leaves\" : [ { \"object\" : \"leaf\" , \"text\" : \":tada:\" , \"marks\" : [] } ] } ] }, { \"object\" : \"text\" , \"leaves\" : [ { \"object\" : \"leaf\" , \"text\" : \" emoji, some \" , \"marks\" : [] }, { \"object\" : \"leaf\" , \"text\" : \"bold formatting\" , \"marks\" : [ { \"object\" : \"mark\" , \"type\" : \"italic\" , \"data\" : {} } ] }, { \"object\" : \"leaf\" , \"text\" : \", maybe even a \" , \"marks\" : [] } ] }, { \"object\" : \"inline\" , \"type\" : \"reaction\" , \"data\" : { \"reaction\" : { \"id\" : 294637 , \"customReactionId\" : 294637 } }, \"nodes\" : [ { \"object\" : \"text\" , \"leaves\" : [ { \"object\" : \"leaf\" , \"text\" : \":thinkingwithblobs:\" , \"marks\" : [] } ] } ] }, { \"object\" : \"text\" , \"leaves\" : [ { \"object\" : \"leaf\" , \"text\" : \" custom emoji?\" , \"marks\" : [] } ] } ] } ] } } } Edit Message \ud83d\udd17 PATCH /channels/{ channel.id }/messages/{ message.id } Edit a previously sent message. The fields content , embed , allowed_mentions and flags can be edited by the original message author. Other users can only edit flags and only if they have the MANAGE_MESSAGES permission in the corresponding channel. When specifying flags, ensure to include all previously set flags/bits in addition to ones that you are modifying. Only flags documented in the table below may be modified by users (unsupported flag changes are currently ignored without error). Returns a message object. Fires a Message Update Gateway event. Info All parameters to this endpoint are optional and nullable. JSON Params Field Type Description content string the new message contents (up to 2000 characters) embed embed object embedded rich content Delete Message \ud83d\udd17 DELETE /channels/{ channel.id }/messages/{ message.id } Delete a message. Fires a Message Delete Gateway event. Add Reaction \ud83d\udd17 POST /channels/{ channel.id }/messages/{ message.id }/reactions/{reaction.id} React to a message with an emoji. Returns a pretty empty [null, [], []] on success. Delete Own Reaction \ud83d\udd17 DELETE /channels/{ channel.id }/messages/{ message.id }/reactions/{reaction.id} Delete your reaction to a message. Returns a pretty empty [[], []] on success. Get Pinned Messages \ud83d\udd17 GET /channels/{ channel.id }/pins Returns all pinned messages in the channel as an array of message objects inside a message key. Pin Message \ud83d\udd17 POST /channels/{ channel.id }/pins Warning The max pinned messages is ???. Pin a message in a channel. JSON Params Field Type Description messageId message id the message's id to pin Unpin Message \ud83d\udd17 DELETE /channels/{ channel.id }/pins/{ message.id } Delete a pinned message in a channel. Create Thread \ud83d\udd17 POST /channels/{ channel.id }/threads Create a new thread in a channel. Returns the created thread object on success. JSON Params Field Type Description name string the name that this thread should have message message the message to send when creating this thread channelId uuid the id that this thread will have threadMessageId uuid ? initialThreadMessage message the message that this thread is starting on contentType string the channel content type that this thread should be. can probably only be 'chat', but try others and see! confirmed boolean ? Delete Thread \ud83d\udd17 DELETE /teams/{ team.id }/groups/{ group.id }/channels/{ thread.id } Info group.id can be undefined if this is the base group. Delete a thread in a channel. Post Team Announcement \ud83d\udd17 POST /teams/{ team.id }/announcements Warning This posts an announcement to no specific channel. To post to a specific channel, see Post Announcement Post an announcement to a team's overview page. JSON Params Field Type Description title string the announcement's title content announcement content the announcement's content (similar to message content ) Post Announcement \ud83d\udd17 POST /channels/{ channel.id }/announcements Post an announcement to an announcement channel. JSON Params Field Type Description title string the announcement's title content announcement content the announcement's content (similar to message content ) dontSendNotifications boolean whether to \"notify all users\" when the announcement is posted","title":"Channels"},{"location":"resources/channel/#channels","text":"","title":"Channels"},{"location":"resources/channel/#channel-object","text":"Represents a team or DM channel.","title":"Channel Object"},{"location":"resources/channel/#message-object","text":"Represents a message sent in a channel within Guilded.","title":"Message Object"},{"location":"resources/channel/#unfurl-embed-object","text":"","title":"Unfurl Embed Object"},{"location":"resources/channel/#embed-object","text":"Embeds objects in Guilded are the same as in Discord.","title":"Embed Object"},{"location":"resources/channel/#get-embed-for-url","text":"GET /content/embed_info Generate embed data for a specific URL. Returns a special \"unfurl embed\" object on response.","title":"Get Embed for URL"},{"location":"resources/channel/#embed-limits","text":"To facilitate showing rich content, rich embeds do not follow the traditional limits of message content. However, some limits are still in place to prevent excessively large embeds. The following table describes the limits:","title":"Embed Limits"},{"location":"resources/channel/#get-channel","text":"GET /channels/{ channel.id } Get a channel by ID. Returns a channel object .","title":"Get Channel"},{"location":"resources/channel/#modify-channel","text":"PATCH /channels/{ channel.id } Update a channel's settings. Requires the MANAGE_CHANNELS permission for the guild. Returns a channel on success, and a 400 BAD REQUEST on invalid parameters. Fires a Channel Update Gateway event. If modifying a category, individual Channel Update events will fire for each child channel that also changes. If modifying permission overwrites, the MANAGE_ROLES permission is required. Only permissions your bot has in the guild or channel can be allowed/denied (unless your bot has a MANAGE_ROLES overwrite in the channel). All JSON parameters are optional.","title":"Modify Channel"},{"location":"resources/channel/#deleteclose-channel","text":"DELETE /channels/{ channel.id } Delete a channel. Requires the MANAGE_CHANNELS permission for the team. Deleting a category does not delete its child channels; they will have their categoryId removed and a Channel Update Gateway event will fire for each of them. Returns a channel object on success. Fires a Channel Delete Gateway event. Warn Deleting a guild channel cannot be undone. Use this with caution, as it is impossible to undo this action when performed on a guild channel. In contrast, when used with a private message, it is possible to undo the action by opening a private message with the recipient again. Info For Community guilds, the Rules or Guidelines channel and the Community Updates channel cannot be deleted.","title":"Delete/Close Channel"},{"location":"resources/channel/#get-channel-messages","text":"GET /channels/{ channel.id }/messages Returns the messages for a channel. Does not require authentication. Returns an array of message objects and a boolean hasPastMessages detailing if there are messages preceeding this array on success. Query string parameter limit has been tested up to 50,000.","title":"Get Channel Messages"},{"location":"resources/channel/#get-channel-message","text":"GET /content/route/metadata?route=//channels/{ channel.id }/chat?messageId={ message.id } Get a specific message in the channel. Returns a message object on success.","title":"Get Channel Message"},{"location":"resources/channel/#send-message","text":"POST /channels/{ channel.id }/messages Post a message to a team channel or DM channel. Returns a message object. Fires a Message Create Gateway event. The actual uploading of attachments is a separate endpoint. See how to upload files . Use a dynamicMediaTypeId of ContentMedia . The concept of \"replies\" do not exist, but you may begin a new thread with a message key to send your message as a new thread.","title":"Send Message"},{"location":"resources/channel/#edit-message","text":"PATCH /channels/{ channel.id }/messages/{ message.id } Edit a previously sent message. The fields content , embed , allowed_mentions and flags can be edited by the original message author. Other users can only edit flags and only if they have the MANAGE_MESSAGES permission in the corresponding channel. When specifying flags, ensure to include all previously set flags/bits in addition to ones that you are modifying. Only flags documented in the table below may be modified by users (unsupported flag changes are currently ignored without error). Returns a message object. Fires a Message Update Gateway event. Info All parameters to this endpoint are optional and nullable.","title":"Edit Message"},{"location":"resources/channel/#delete-message","text":"DELETE /channels/{ channel.id }/messages/{ message.id } Delete a message. Fires a Message Delete Gateway event.","title":"Delete Message"},{"location":"resources/channel/#add-reaction","text":"POST /channels/{ channel.id }/messages/{ message.id }/reactions/{reaction.id} React to a message with an emoji. Returns a pretty empty [null, [], []] on success.","title":"Add Reaction"},{"location":"resources/channel/#delete-own-reaction","text":"DELETE /channels/{ channel.id }/messages/{ message.id }/reactions/{reaction.id} Delete your reaction to a message. Returns a pretty empty [[], []] on success.","title":"Delete Own Reaction"},{"location":"resources/channel/#get-pinned-messages","text":"GET /channels/{ channel.id }/pins Returns all pinned messages in the channel as an array of message objects inside a message key.","title":"Get Pinned Messages"},{"location":"resources/channel/#pin-message","text":"POST /channels/{ channel.id }/pins Warning The max pinned messages is ???. Pin a message in a channel.","title":"Pin Message"},{"location":"resources/channel/#unpin-message","text":"DELETE /channels/{ channel.id }/pins/{ message.id } Delete a pinned message in a channel.","title":"Unpin Message"},{"location":"resources/channel/#create-thread","text":"POST /channels/{ channel.id }/threads Create a new thread in a channel. Returns the created thread object on success.","title":"Create Thread"},{"location":"resources/channel/#delete-thread","text":"DELETE /teams/{ team.id }/groups/{ group.id }/channels/{ thread.id } Info group.id can be undefined if this is the base group. Delete a thread in a channel.","title":"Delete Thread"},{"location":"resources/channel/#post-team-announcement","text":"POST /teams/{ team.id }/announcements Warning This posts an announcement to no specific channel. To post to a specific channel, see Post Announcement Post an announcement to a team's overview page.","title":"Post Team Announcement"},{"location":"resources/channel/#post-announcement","text":"POST /channels/{ channel.id }/announcements Post an announcement to an announcement channel.","title":"Post Announcement"},{"location":"resources/emoji/","text":"Custom Reactions/Emojis \ud83d\udd17 A \"custom reaction\" refers to a custom server emoji in Guilded. However, since this name is silly and confusing, this page will refer to this concept as \"emojis\", \"custom emoijs\", or \"team emojis\". Custom Emoji Object \ud83d\udd17 Custom Emoji Structure Field Type Description id integer emoji's id (cannot be used for forming a cdn url) name string emoji's name createdBy user id user's id that created this emoji createdAt ISO8601 timestamp when this emoji was created png string aws url to this emoji's image file webp string aws url to this emoji's image file apng string aws url to this emoji's image file aliases array of strings an array of aliases this emoji can be used with teamId team id team's id that this emoji is from isDeleted boolean whether this emoji has been deleted discordEmojiId ?snowflake the discord emoji's id this emoji corresponds to discordSyncedAt ?ISO8601 timestamp when this emoji was last synced with its discord counterpart Emoji Example { \"id\" : 239839 , \"name\" : \"beepboop\" , \"png\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/36b263b547cf38de0d55ef01e1ab55ab-Full.webp?w=120&h=120\" , \"webp\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/36b263b547cf38de0d55ef01e1ab55ab-Full.webp?w=120&h=120\" , \"apng\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/36b263b547cf38de0d55ef01e1ab55ab-Full.webp?w=120&h=120\" , \"aliases\" : [], \"createdAt\" : \"2020-07-28T06:48:56.525Z\" , \"createdBy\" : \"EdVMVKR4\" , \"teamId\" : \"NRgqXnPE\" , \"isDeleted\" : false , \"discordEmojiId\" : null , \"discordSyncedAt\" : \"2020-07-28T06:49:03.668Z\" } Get Team Emojis \ud83d\udd17 GET /teams/{ team.id }/customReactions Returns a list of emoji objects for the given team. Query Params Field Type Description Required Default maxItems integer maximum number of emojis to return when[upperValue] ISO8601 timestamp return emojis created after this time false when[lowerValue] ISO8601 timestamp return emojis created before this time false createdBy user id return emojis created by this user's id searchTerm string search emoji names with a string beforeId emoji id return emojis created before this emoji was created (potentially something to do with pagination) false Create Team Emoji \ud83d\udd17 POST /teams/{ team.id }/customReactions Create a new emoji for the team. Returns the new emoji object on success. Info You can request this endpoint without any image URL and recieve an HTTP 200 response, but no emoji will actually show up or be usable in the team. JSON Params Field Type Description name string name of the emoji png? string url to the image you uploaded ( CustomReaction ) webp? string url to the image you uploaded ( CustomReaction ) apng? string url to the image you uploaded ( CustomReaction ) Modify Team Emoji \ud83d\udd17 PATCH /teams/{ team.id }/customReactions/{ emoji.id } Modify the given emoji. JSON Params Field Type Description name string name of the emoji Delete Team Emoji \ud83d\udd17 DELETE /teams/{ team.id }/customReactions/{ emoji.id } Delete the given emoji. Get Team Emoji Creators \ud83d\udd17 GET /teams/{ team.id }/customReactionCreators Get a list of users who have created emojis in this team. Info This will return each user once. To see how many emojis a specific user has uploaded, consider filtering the response from Get Team Emojis Example Response [ { \"userId\" : \"EdVMVKR4\" }, { \"userId\" : \"lAeMagzA\" } ]","title":"Custom Reactions/Emojis"},{"location":"resources/emoji/#custom-reactionsemojis","text":"A \"custom reaction\" refers to a custom server emoji in Guilded. However, since this name is silly and confusing, this page will refer to this concept as \"emojis\", \"custom emoijs\", or \"team emojis\".","title":"Custom Reactions/Emojis"},{"location":"resources/emoji/#custom-emoji-object","text":"","title":"Custom Emoji Object"},{"location":"resources/emoji/#get-team-emojis","text":"GET /teams/{ team.id }/customReactions Returns a list of emoji objects for the given team.","title":"Get Team Emojis"},{"location":"resources/emoji/#create-team-emoji","text":"POST /teams/{ team.id }/customReactions Create a new emoji for the team. Returns the new emoji object on success. Info You can request this endpoint without any image URL and recieve an HTTP 200 response, but no emoji will actually show up or be usable in the team.","title":"Create Team Emoji"},{"location":"resources/emoji/#modify-team-emoji","text":"PATCH /teams/{ team.id }/customReactions/{ emoji.id } Modify the given emoji.","title":"Modify Team Emoji"},{"location":"resources/emoji/#delete-team-emoji","text":"DELETE /teams/{ team.id }/customReactions/{ emoji.id } Delete the given emoji.","title":"Delete Team Emoji"},{"location":"resources/emoji/#get-team-emoji-creators","text":"GET /teams/{ team.id }/customReactionCreators Get a list of users who have created emojis in this team. Info This will return each user once. To see how many emojis a specific user has uploaded, consider filtering the response from Get Team Emojis","title":"Get Team Emoji Creators"},{"location":"resources/group/","text":"Groups \ud83d\udd17 A group is a sub-section of a team that allows for custom membership based on roles. They can have a custom icon and name (under the main team's name) in the sidebar, making them somewhat of a middle ground between a permission-locked category and a separate team entirely. Group Object \ud83d\udd17 Group Structure Field Type Description id generic id the id of this group name string the name of this group description ?string the description of this group priority integer where this group is visually the sidebar (base group is 1, not 0) type string the type of this group. unsure in what context it would not be 'team' avatar ?string the group's avatar url banner ?string the group's banner url teamId generic id the id of the team that this group is part of gameId ?integer the id of the game (if any) that this group has been assigned additionalGameInfo dictionary ??? visibilityTeamRoleId integer the primary role id that is allowed to view this group visibilityTeamRoleIds array of integer all role ids that are allowed to view this group additionalVisibilityTeamRoleIds ?array of integer extra role ids that are allowed to view this group membershipTeamRoleId integer the primary role id that is a member of this group membershipTeamRoleIds array of integer all role ids that are a member of this group additionalMembershipTeamRoleIds ?array of integer extra role ids that are a member of this group isBase boolean whether this group is the base group, or \"Server home\" in the UI createdAt ISO8601 timestamp when this group was created createdBy ? generic id the id of the user who created this group (null if base) updatedAt ?ISO8601 timestamp when this group was last updated (edited) updatedBy ? generic id the id of the user who last updated (edited) this group deletedAt ?ISO8601 timestamp when this group was deleted customReactionId ?integer the custom emoji assigned to this group (just spitballing here) isPublic boolean whether this group can be seen without being in the server archivedAt ?ISO8601 timestamp when this group was archived archivedBy ? generic id the id of the user who archived this group membershipUpdates array ???","title":"Groups"},{"location":"resources/group/#groups","text":"A group is a sub-section of a team that allows for custom membership based on roles. They can have a custom icon and name (under the main team's name) in the sidebar, making them somewhat of a middle ground between a permission-locked category and a separate team entirely.","title":"Groups"},{"location":"resources/group/#group-object","text":"","title":"Group Object"},{"location":"resources/team/","text":"Teams \ud83d\udd17 The meat of communication on Guilded. They are referred to as \"servers\" in the UI, and sometimes \"guilds\". Team Object \ud83d\udd17 Team Structure Field Type Description id generic id team id name string team name subdomain ?string custom \"url\" of the team. equivalent to vanity_url_code on discord bio ?string team bio profilePicture ?string team icon url ownerId user id id of owner Example Team Refer to Get Team's example response Team Member Object \ud83d\udd17 Team Member Structure Field Type Description id generic id the user's id name string the user's username, not unique across the platform nickname string the member's team-specific nickname badges ?array the badges that this member has (\"GuildedStaff\", \"PartnerProgram\", ?) membershipRole string ? profilePicture string (url) the user's avatar url profileBannerBlur ?string (url) the user's banner url joinDate ISO8601 timestamp when this member joined their team userStatus user status object this user's current activity/\"status\" userPresenceStatus integer this user's presence (online, idle, etc) userTransientStatus transient status object this user's transient status (game, streaming, ?) aliases array the linked games on the user's profile lastOnline ISO8601 timestamp when the user was last online roleIds array of integer the roles' ids that the member has subscriptionType ?integer(?) guilded gold-related value socialLinks array of dictionaries each item has type - the platform, handle - the user's username on that platform, and additionalInfo - unknown teamXp integer how much xp the member has in this team Example Guild Member { \"id\" : \"EdVMVKR4\" , \"name\" : \"shay\" , \"nickname\" : null , \"badges\" : null , \"joinDate\" : \"2020-07-31T18:10:35.302Z\" , \"membershipRole\" : \"admin\" , \"lastOnline\" : \"2021-03-07T05:22:09.597Z\" , \"profilePicture\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserAvatar/74bfc8be9425a926a1f48d9b078509bc-Large.png?w=450&h=450\" , \"profileBannerBlur\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserBanner/acaa9d0f78dd8cdd93f3ce44d14c0260-Hero.png?w=1500&h=500\" , \"userStatus\" : { \"content\" : null , \"customReactionId\" : 294765 , \"customReaction\" : { \"id\" : 294765 , \"name\" : \"ablobwobwork\" , \"png\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/d7cf013a4d01460a81186e65f1f8c12a-Full.webp?w=120&h=120&ia=1\" , \"webp\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/d7cf013a4d01460a81186e65f1f8c12a-Full.webp?w=120&h=120&ia=1\" , \"apng\" : null } }, \"roleIds\" : [ 23138883 , 23138891 , 23138936 , 23139118 , 23281097 ], \"subscriptionType\" : null , \"socialLinks\" : [ { \"type\" : \"patreon\" , \"handle\" : \"Shahayhay \" , \"additionalInfo\" : {} }, { \"type\" : \"twitter\" , \"handle\" : \"GuildedAPI\" , \"additionalInfo\" : {} } ], \"aliases\" : [], \"userPresenceStatus\" : 1 , \"userTransientStatus\" : null , \"teamXp\" : 0 } Ban Object \ud83d\udd17 Ban Structure Field Type Description reason string the reason for the ban (can be empty, won't be null) userId user id the banned user's id bannedBy user id the moderator who banned this user createdAt ISO8601 timestamp when this ban was created Example Ban { \"reason\" : \"something funny here, idk\" , \"userId\" : \"2d2Wg8Pm\" , \"bannedBy\" : \"EdVMVKR4\" , \"createdAt\" : \"2021-03-13T18:15:53.622Z\" } Check Team Name Availability \ud83d\udd17 GET /dryrun/teamname/{name} Check the availability of a team name. Returns {\"exists\": false} if the name is available, and {\"exists\": true} if it is not. Create Team \ud83d\udd17 POST /teams Create a new team. Returns a team object wrapped in a team key on success. JSON Params Field Type Description teamName string name of the team (3-30 characters, not unique across the platform ) userId? user id the user's id who is creating this team Get Team \ud83d\udd17 GET /teams/{ team.id } Warning Performing this request on a ~380-member team resulted in a 343 KB file. Expect Guilded to return less information in a single request in the future. The inefficiency of Guilded's client-server communication (and thus how much you should expect this change) cannot be overstated. For example, try this request on the Guilded Official server (id: wlVr3Ggl) and see how large the resulting request is ( 7.6 MB as of Mar. 9, 2021). Returns the team object for the given id. Example Response Info Many list items were redacted for brevity, such as most of the member list (the entire list is returned) and most of the roles (only the base role, which is included twice, and one custom role, are visible now). { \"team\" : { \"id\" : \"4R5q39VR\" , \"name\" : \"Guilded-API\" , \"subdomain\" : \"guilded-api\" , \"bio\" : null , \"status\" : null , \"timezone\" : \"America/New York (EST/EDT)\" , \"description\" : \"The unofficial resource hub for all API-related projects and development to do with the Guilded API.\" , \"type\" : \"community\" , \"games\" : [], \"characteristics\" : null , \"measurements\" : { \"numMembers\" : 424 , \"numFollowers\" : \"21\" , \"numRecentMatches\" : 0 , \"numRecentMatchWins\" : 0 , \"matchmakingGameRanks\" : [], \"numFollowersAndMembers\" : 445 , \"numMembersAddedInLastDay\" : 0 , \"numMembersAddedInLastWeek\" : 15 , \"mostRecentMemberLastOnline\" : 1615082895464 , \"numMembersAddedInLastMonth\" : 102 , \"subscriptionMonthsRemaining\" : null }, \"members\" : [ { \"id\" : \"EdVMVKR4\" , \"name\" : \"shay\" , \"nickname\" : null , \"badges\" : null , \"joinDate\" : \"2020-07-31T18:10:35.302Z\" , \"membershipRole\" : \"admin\" , \"lastOnline\" : \"2021-03-07T05:22:09.597Z\" , \"profilePicture\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserAvatar/74bfc8be9425a926a1f48d9b078509bc-Large.png?w=450&h=450\" , \"profileBannerBlur\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserBanner/acaa9d0f78dd8cdd93f3ce44d14c0260-Hero.png?w=1500&h=500\" , \"userStatus\" : { \"content\" : { \"object\" : \"value\" , \"document\" : { \"data\" : {}, \"nodes\" : [ { \"data\" : {}, \"type\" : \"paragraph\" , \"nodes\" : [ { \"leaves\" : [ { \"text\" : \"g.gg/guilded-api\" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" }, { \"data\" : { \"reaction\" : { \"id\" : 294745 , \"customReaction\" : { \"id\" : 294745 , \"name\" : \"blobcouple\" , \"png\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/448cff53087b93e72298bae9d47708f1-Full.webp?w=120&h=120\" , \"webp\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/448cff53087b93e72298bae9d47708f1-Full.webp?w=120&h=120\" , \"apng\" : null }, \"customReactionId\" : 294745 } }, \"type\" : \"reaction\" , \"nodes\" : [ { \"leaves\" : [ { \"text\" : \":blobcouple:\" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" } ], \"object\" : \"inline\" }, { \"leaves\" : [ { \"text\" : \"g.gg/blob-emoji \" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" }, { \"data\" : { \"reaction\" : { \"id\" : 294677 , \"customReaction\" : { \"id\" : 294677 , \"name\" : \"blobpats\" , \"png\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/ff03be6efe491bc934b1c217d70da9ce-Full.webp?w=120&h=120\" , \"webp\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/ff03be6efe491bc934b1c217d70da9ce-Full.webp?w=120&h=120\" , \"apng\" : null }, \"customReactionId\" : 294677 } }, \"type\" : \"reaction\" , \"nodes\" : [ { \"leaves\" : [ { \"text\" : \":blobpats:\" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" } ], \"object\" : \"inline\" } ], \"object\" : \"block\" } ], \"object\" : \"document\" } }, \"customReactionId\" : 294765 , \"customReaction\" : { \"id\" : 294765 , \"name\" : \"ablobwobwork\" , \"png\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/d7cf013a4d01460a81186e65f1f8c12a-Full.webp?w=120&h=120&ia=1\" , \"webp\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/d7cf013a4d01460a81186e65f1f8c12a-Full.webp?w=120&h=120&ia=1\" , \"apng\" : null } }, \"roleIds\" : [ 23138883 , 23138891 , 23138936 , 23139118 , 23281097 ], \"subscriptionType\" : null , \"socialLinks\" : [ { \"type\" : \"patreon\" , \"handle\" : \"Shahayhay \" , \"additionalInfo\" : {} }, { \"type\" : \"twitter\" , \"handle\" : \"GuildedAPI\" , \"additionalInfo\" : {} } ], \"aliases\" : [], \"userPresenceStatus\" : 1 , \"userTransientStatus\" : null , \"teamXp\" : 0 } ], \"memberCount\" : null , \"webhooks\" : [ { \"id\" : \"56a9dde0-aba3-4afd-85b8-05cda9942c93\" , \"name\" : \"GitHub\" , \"channelId\" : \"80bbb4b1-a880-490c-87e9-5c7edf179d5a\" , \"teamId\" : \"4R5q39VR\" , \"iconUrl\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserAvatar/3f8e4273b8b9dcacd57379a637a773f4-Large.png?w=450&h=450\" , \"createdBy\" : \"EdVMVKR4\" , \"createdAt\" : \"2020-08-16T04:12:56.664Z\" , \"deletedAt\" : null } ], \"bots\" : [ { \"id\" : \"da26bb64-0c17-422f-bd81-6e2dff6b7daa\" , \"name\" : \"bearger\" , \"enabled\" : true , \"flows\" : [ { \"id\" : \"aabc65b8-50ce-42e2-aa0d-c601b1b1ea26\" , \"enabled\" : true , \"error\" : false , \"botId\" : \"da26bb64-0c17-422f-bd81-6e2dff6b7daa\" , \"teamId\" : \"4R5q39VR\" , \"createdBy\" : \"EdVMVKR4\" , \"createdAt\" : \"2020-11-11T05:57:50.811348+00:00\" , \"deletedAt\" : null , \"triggerType\" : \"BotTriggerSendMessageToTeamChannel\" , \"triggerMeta\" : { \"content\" : \"-hello\" }, \"actionType\" : \"SendMessageToTeamChannel\" , \"actionMeta\" : { \"content\" : { \"object\" : \"value\" , \"document\" : { \"data\" : {}, \"nodes\" : [ { \"data\" : {}, \"type\" : \"paragraph\" , \"nodes\" : [ { \"leaves\" : [ { \"text\" : \"hello \" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" }, { \"data\" : { \"templateParameterId\" : \"BotActionTriggeringUser\" }, \"type\" : \"template-parameter\" , \"nodes\" : [ { \"leaves\" : [ { \"text\" : \"$TriggeringUser\" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" } ], \"object\" : \"inline\" }, { \"leaves\" : [ { \"text\" : \"! i'm bearger, one of the first custom bots made with Guilded's public API (though it seems to just be server flows at the moment). \" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" } ], \"object\" : \"block\" } ], \"object\" : \"document\" } } } } ], \"teamId\" : \"4R5q39VR\" , \"iconUrl\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserAvatar/26584f8d26eeec8396d28f22678f06dc-Large.png?w=450&h=450\" , \"createdBy\" : \"EdVMVKR4\" , \"createdAt\" : \"2020-11-11T05:57:50.811Z\" , \"deletedAt\" : null } ], \"rolesById\" : { \"23138883\" : { \"id\" : 23138883 , \"name\" : \"Admin\" , \"color\" : \"#8ad1ff\" , \"priority\" : 13 , \"permissions\" : { \"xp\" : 1 , \"chat\" : 119 , \"docs\" : 15 , \"forms\" : 18 , \"lists\" : 63 , \"media\" : 15 , \"voice\" : 8179 , \"forums\" : 123 , \"general\" : 31796 , \"streams\" : 51 , \"calendar\" : 31 , \"scheduling\" : 11 , \"matchmaking\" : 1 , \"recruitment\" : 55 , \"announcements\" : 7 , \"customization\" : 49 }, \"isBase\" : false , \"teamId\" : \"4R5q39VR\" , \"createdAt\" : \"2020-07-31T18:10:35.328621+00:00\" , \"updatedAt\" : \"2021-03-06T18:03:16.052954+00:00\" , \"isMentionable\" : false , \"discordRoleId\" : null , \"discordSyncedAt\" : null , \"isSelfAssignable\" : false , \"isDisplayedSeparately\" : false }, \"23138884\" : { \"id\" : 23138884 , \"name\" : \"Member\" , \"color\" : \"#ececee\" , \"priority\" : 1 , \"permissions\" : { \"chat\" : 115 , \"docs\" : 2 , \"forms\" : 16 , \"lists\" : 2 , \"media\" : 2 , \"voice\" : 6211 , \"forums\" : 67 , \"streams\" : 51 , \"calendar\" : 2 , \"scheduling\" : 3 , \"announcements\" : 2 , \"customization\" : 16 }, \"isBase\" : true , \"teamId\" : \"4R5q39VR\" , \"createdAt\" : \"2020-07-31T18:10:35.350927+00:00\" , \"updatedAt\" : \"2021-03-06T18:03:16.052954+00:00\" , \"isMentionable\" : true , \"discordRoleId\" : null , \"discordSyncedAt\" : null , \"isSelfAssignable\" : false , \"isDisplayedSeparately\" : true }, \"baseRole\" : { \"id\" : 23138884 , \"name\" : \"Member\" , \"color\" : \"#ececee\" , \"priority\" : 1 , \"permissions\" : { \"chat\" : 115 , \"docs\" : 2 , \"forms\" : 16 , \"lists\" : 2 , \"media\" : 2 , \"voice\" : 6211 , \"forums\" : 67 , \"streams\" : 51 , \"calendar\" : 2 , \"scheduling\" : 3 , \"announcements\" : 2 , \"customization\" : 16 }, \"isBase\" : true , \"teamId\" : \"4R5q39VR\" , \"createdAt\" : \"2020-07-31T18:10:35.350927+00:00\" , \"updatedAt\" : \"2021-03-06T18:03:16.052954+00:00\" , \"isMentionable\" : true , \"discordRoleId\" : null , \"discordSyncedAt\" : null , \"isSelfAssignable\" : false , \"isDisplayedSeparately\" : true } }, \"rolesVersion\" : 32 , \"bannerImages\" : {}, \"createdAt\" : \"2020-07-31T18:10:35.302Z\" , \"ownerId\" : \"EdVMVKR4\" , \"rankNames\" : null , \"profilePicture\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/TeamAvatar/a66e23924a4bc49fbf9242a98d955a7c-Large.png?w=450&h=450\" , \"teamDashImage\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/TeamBanner/62d94db23c910fa3a209b5edf2cf7387-Hero.png?w=1067&h=600\" , \"additionalInfo\" : { \"platform\" : \"native\" }, \"teamPreferences\" : null , \"additionalGameInfo\" : {}, \"discordGuildId\" : null , \"discordServerName\" : null , \"customizationInfo\" : {}, \"socialInfo\" : { \"twitter\" : \"@GuildedAPI\" }, \"homeBannerImageSm\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/TeamBanner/62d94db23c910fa3a209b5edf2cf7387-Hero.png?w=1067&h=600\" , \"homeBannerImageMd\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/TeamBanner/62d94db23c910fa3a209b5edf2cf7387-Hero.png?w=1067&h=600\" , \"homeBannerImageLg\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/TeamBanner/62d94db23c910fa3a209b5edf2cf7387-Hero.png?w=1067&h=600\" , \"insightsInfo\" : {}, \"alphaInfo\" : {}, \"isRecruiting\" : true , \"isVerified\" : false , \"isPublic\" : true , \"alwaysShowTeamHome\" : false , \"isPro\" : false , \"autoSyncDiscordRoles\" : false , \"notificationPreference\" : null , \"followingGroups\" : null , \"baseGroup\" : { \"id\" : \"l3GmAe9d\" , \"name\" : \"Server home\" , \"description\" : null , \"priority\" : 1 , \"type\" : \"team\" , \"avatar\" : null , \"banner\" : null , \"teamId\" : \"4R5q39VR\" , \"gameId\" : null , \"visibilityTeamRoleId\" : 23138884 , \"membershipTeamRoleId\" : 23138884 , \"isBase\" : true , \"additionalGameInfo\" : {}, \"createdBy\" : null , \"createdAt\" : \"2020-07-31T18:10:35.376187+00:00\" , \"updatedBy\" : null , \"updatedAt\" : null , \"deletedAt\" : null , \"customReactionId\" : null , \"isPublic\" : true , \"archivedAt\" : null , \"archivedBy\" : null }, \"subscriptionInfo\" : null , \"followerCount\" : 21 , \"userFollowsTeam\" : false , \"isUserApplicant\" : false , \"hasImportedDiscordServer\" : false , \"isUserInvited\" : false , \"lfmStatusByGameId\" : {}, \"flair\" : [ { \"id\" : 1 , \"amount\" : 15 } ], \"isUserBannedFromTeam\" : false , \"mutedMembers\" : [], \"deafenedMembers\" : [], \"upsell\" : null , \"serverSubscriptionsGateEnabled\" : false , \"serverSubscriptionPlans\" : [], \"teamPaymentInfo\" : null , \"socialLinks\" : [] } } Modify Team \ud83d\udd17 PUT /teams/{ team.id }/games/null/settings Modify a team's settings. Returns {\"updated\": true} on success. Fires a Team Update Gateway event. Info All parameters to this endpoint are optional JSON Params Field Type Description name string new name for the team gameId integer the main game's id for the team description string the \"about\" section for the team Disband Team \ud83d\udd17 DELETE /teams/{ team.id } Delete a team permanently. User must be owner. Returns {\"success\": true} on success. Get Team Channels \ud83d\udd17 GET /teams/{ team.id }/channels Returns a list of team channel objects. Create Team Channel \ud83d\udd17 POST /teams/{ team.id }/groups/{group.id}/channels Create a new channel object. Requires the MANAGE_CHANNELS permission. Returns the new channel object on success. Fires a Channel Create Gateway event. JSON Params Field Type Description Required Default name string channel name (1-??? characters, can include spaces) true contentType string the type of channel true channelCategoryId integer the category's ID to create this channel under. omit to create without a category false null isPublic boolean whether or not this channel should be visible to users who aren't in the team false false Get Team Member \ud83d\udd17 GET /teams/{ team.id }/members/{ user.id } Returns a team member object for the specified user. List Team Members \ud83d\udd17 GET /teams/{ team.id }/members Returns a list of team member objects that are members of the guild. Change Team Member Nickname \ud83d\udd17 PUT /teams/{ team.id }/members/{ user.id }/nickname Change a team member's nickname. JSON Params Field Type Description nickname string value to set the user's nickname to Reset Team Member Nickname \ud83d\udd17 DELETE /teams/{ team.id }/members/{ user.id }/nickname Reset a team member's nickname. Set Team Member XP \ud83d\udd17 PUT /teams/{ team.id }/members/{ user.id }/xp Set a team member's XP. JSON Params Field Type Description amount integer the amount of xp to give this user (overrides previous value, does not add on) Remove Team Member \ud83d\udd17 DELETE /teams/{ team.id }/members/{ user.id } Remove a member from a team. This is the same endpoint as Leave Team , but is documented here as well because it can also be used for kicking. Get Team Bans \ud83d\udd17 GET /teams/{ team.id }/members/ban Returns a list of ban objects for the users banned from this guild. Requires the BAN_MEMBERS permission. Create Team Ban \ud83d\udd17 DELETE /teams/{ team.id }/members/ban Create a team ban (ban somebody), and optionally delete previous messages sent by the banned user. JSON Params Field Type Description deleteHistoryOptions? integer delete history options afterDate ?ISO8601 timestamp the date from which to delete this user's messages memberId member id the user's id to ban teamId team id the team's id to ban this user on (the current team) reason string reason for the ban. can be empty Remove Team Ban \ud83d\udd17 PUT /teams/{ team.id }/members/{ user.id }/ban Remove the ban for a user. Requires the BAN_MEMBERS permissions. Returns an empty dictionary on success. JSON Params Field Type Description memberId member id the user's id to unban teamId team id the team's id to unban this user from (the current team) Delete History Options Value Description -1 no messages 0 1 Get Team Roles \ud83d\udd17 GET /teams/{ team.id }/roles Returns a list of role objects for the guild. Create Team Role \ud83d\udd17 POST /teams/{ team.id }/roles Create a new role for the guild. Requires the MANAGE_ROLES permission. Returns the new role object on success. Fires a Guild Role Create Gateway event. All JSON params are optional. JSON Params Field Type Description Default name string name of the role \"new role\" permissions string bitwise value of the enabled/disabled permissions @everyone permissions in guild color integer RGB color value 0 hoist boolean whether the role should be displayed separately in the sidebar false mentionable boolean whether the role should be mentionable false Modify Guild Role Positions \ud83d\udd17 PATCH /teams/{ team.id }/roles Modify the positions of a set of role objects for the guild. Requires the MANAGE_ROLES permission. Returns a list of all of the guild's role objects on success. Fires multiple Guild Role Update Gateway events. This endpoint takes a JSON array of parameters in the following format: JSON Params Field Type Description id snowflake role ?position ?integer sorting position of the role Modify Guild Role \ud83d\udd17 PATCH /teams/{ team.id }/roles/{role.id#DOCS_TOPICS_PERMISSIONS/role-object} Modify a guild role. Requires the MANAGE_ROLES permission. Returns the updated role on success. Fires a Guild Role Update Gateway event. Info All parameters to this endpoint are optional and nullable. JSON Params Field Type Description name string name of the role permissions string bitwise value of the enabled/disabled permissions color integer RGB color value hoist boolean whether the role should be displayed separately in the sidebar mentionable boolean whether the role should be mentionable Delete Guild Role \ud83d\udd17 DELETE /teams/{ team.id }/roles/{role.id#DOCS_TOPICS_PERMISSIONS/role-object} Delete a guild role. Requires the MANAGE_ROLES permission. Returns a 204 empty response on success. Fires a Guild Role Delete Gateway event. Get Guild Invites \ud83d\udd17 GET /teams/{ team.id }/invites Returns a list of invite objects (with invite metadata ) for the guild. Requires the MANAGE_GUILD permission. Create Team Invite \ud83d\udd17 POST /teams/{ team.id }/invites Returns {\"invite\": {\"id\": invite_code}} , where invite_code is the generated invite code (a string, does not include https://guilded.gg/i/ ), on success. JSON Params Field Type Description gameId ?integer the game's id to make this invite for (??? what) teamId team id the team's id to make this invite for (why)","title":"Teams"},{"location":"resources/team/#teams","text":"The meat of communication on Guilded. They are referred to as \"servers\" in the UI, and sometimes \"guilds\".","title":"Teams"},{"location":"resources/team/#team-object","text":"","title":"Team Object"},{"location":"resources/team/#team-member-object","text":"","title":"Team Member Object"},{"location":"resources/team/#ban-object","text":"","title":"Ban Object"},{"location":"resources/team/#check-team-name-availability","text":"GET /dryrun/teamname/{name} Check the availability of a team name. Returns {\"exists\": false} if the name is available, and {\"exists\": true} if it is not.","title":"Check Team Name Availability"},{"location":"resources/team/#create-team","text":"POST /teams Create a new team. Returns a team object wrapped in a team key on success.","title":"Create Team"},{"location":"resources/team/#get-team","text":"GET /teams/{ team.id } Warning Performing this request on a ~380-member team resulted in a 343 KB file. Expect Guilded to return less information in a single request in the future. The inefficiency of Guilded's client-server communication (and thus how much you should expect this change) cannot be overstated. For example, try this request on the Guilded Official server (id: wlVr3Ggl) and see how large the resulting request is ( 7.6 MB as of Mar. 9, 2021). Returns the team object for the given id.","title":"Get Team"},{"location":"resources/team/#modify-team","text":"PUT /teams/{ team.id }/games/null/settings Modify a team's settings. Returns {\"updated\": true} on success. Fires a Team Update Gateway event. Info All parameters to this endpoint are optional","title":"Modify Team"},{"location":"resources/team/#disband-team","text":"DELETE /teams/{ team.id } Delete a team permanently. User must be owner. Returns {\"success\": true} on success.","title":"Disband Team"},{"location":"resources/team/#get-team-channels","text":"GET /teams/{ team.id }/channels Returns a list of team channel objects.","title":"Get Team Channels"},{"location":"resources/team/#create-team-channel","text":"POST /teams/{ team.id }/groups/{group.id}/channels Create a new channel object. Requires the MANAGE_CHANNELS permission. Returns the new channel object on success. Fires a Channel Create Gateway event.","title":"Create Team Channel"},{"location":"resources/team/#get-team-member","text":"GET /teams/{ team.id }/members/{ user.id } Returns a team member object for the specified user.","title":"Get Team Member"},{"location":"resources/team/#list-team-members","text":"GET /teams/{ team.id }/members Returns a list of team member objects that are members of the guild.","title":"List Team Members"},{"location":"resources/team/#change-team-member-nickname","text":"PUT /teams/{ team.id }/members/{ user.id }/nickname Change a team member's nickname.","title":"Change Team Member Nickname"},{"location":"resources/team/#reset-team-member-nickname","text":"DELETE /teams/{ team.id }/members/{ user.id }/nickname Reset a team member's nickname.","title":"Reset Team Member Nickname"},{"location":"resources/team/#set-team-member-xp","text":"PUT /teams/{ team.id }/members/{ user.id }/xp Set a team member's XP.","title":"Set Team Member XP"},{"location":"resources/team/#remove-team-member","text":"DELETE /teams/{ team.id }/members/{ user.id } Remove a member from a team. This is the same endpoint as Leave Team , but is documented here as well because it can also be used for kicking.","title":"Remove Team Member"},{"location":"resources/team/#get-team-bans","text":"GET /teams/{ team.id }/members/ban Returns a list of ban objects for the users banned from this guild. Requires the BAN_MEMBERS permission.","title":"Get Team Bans"},{"location":"resources/team/#create-team-ban","text":"DELETE /teams/{ team.id }/members/ban Create a team ban (ban somebody), and optionally delete previous messages sent by the banned user.","title":"Create Team Ban"},{"location":"resources/team/#remove-team-ban","text":"PUT /teams/{ team.id }/members/{ user.id }/ban Remove the ban for a user. Requires the BAN_MEMBERS permissions. Returns an empty dictionary on success.","title":"Remove Team Ban"},{"location":"resources/team/#get-team-roles","text":"GET /teams/{ team.id }/roles Returns a list of role objects for the guild.","title":"Get Team Roles"},{"location":"resources/team/#create-team-role","text":"POST /teams/{ team.id }/roles Create a new role for the guild. Requires the MANAGE_ROLES permission. Returns the new role object on success. Fires a Guild Role Create Gateway event. All JSON params are optional.","title":"Create Team Role"},{"location":"resources/team/#modify-guild-role-positions","text":"PATCH /teams/{ team.id }/roles Modify the positions of a set of role objects for the guild. Requires the MANAGE_ROLES permission. Returns a list of all of the guild's role objects on success. Fires multiple Guild Role Update Gateway events. This endpoint takes a JSON array of parameters in the following format:","title":"Modify Guild Role Positions"},{"location":"resources/team/#modify-guild-role","text":"PATCH /teams/{ team.id }/roles/{role.id#DOCS_TOPICS_PERMISSIONS/role-object} Modify a guild role. Requires the MANAGE_ROLES permission. Returns the updated role on success. Fires a Guild Role Update Gateway event. Info All parameters to this endpoint are optional and nullable.","title":"Modify Guild Role"},{"location":"resources/team/#delete-guild-role","text":"DELETE /teams/{ team.id }/roles/{role.id#DOCS_TOPICS_PERMISSIONS/role-object} Delete a guild role. Requires the MANAGE_ROLES permission. Returns a 204 empty response on success. Fires a Guild Role Delete Gateway event.","title":"Delete Guild Role"},{"location":"resources/team/#get-guild-invites","text":"GET /teams/{ team.id }/invites Returns a list of invite objects (with invite metadata ) for the guild. Requires the MANAGE_GUILD permission.","title":"Get Guild Invites"},{"location":"resources/team/#create-team-invite","text":"POST /teams/{ team.id }/invites Returns {\"invite\": {\"id\": invite_code}} , where invite_code is the generated invite code (a string, does not include https://guilded.gg/i/ ), on success.","title":"Create Team Invite"},{"location":"resources/user/","text":"Users \ud83d\udd17 Users are everywhere. They're in our servers, our DMs, our friends lists.. and in this documentation page! User Object \ud83d\udd17 User Structure Field Type Description id generic id the user's id name string the user's username, not unique across the platform subdomain ?string the user's unique profile url aliases array the linked games on the user's profile email ?string the user's email. null if this is not you serviceEmail ?string ? profilePicture string (url) the user's avatar url profilePictureSm string (url) ^ profilePictureLg string (url) ^ profilePictureBlur string (url) ^ profileBannerSm ?string (url) the user's banner url profileBannerLg ?string (url) ^ profileBannerBlur ?string (url) ^ joinDate ISO8601 timestamp when this user's account was created steamId ?string this user's steam id, if linked userStatus user status object this user's current activity/\"status\" userPresenceStatus integer this user's presence (online, idle, etc) userTransientStatus transient status object this user's transient status (game, streaming, ?) moderationStatus ? ? aboutInfo about info object this user's bio and tagline lastOnline ISO8601 timestamp when this user was last online Example User { \"id\" : \"EdVMVKR4\" , \"name\" : \"shay\" , \"subdomain\" : \"shayy\" , \"aliases\" : [ { \"alias\" : \"shay\" , \"discriminator\" : null , \"name\" : \"shay\" , \"createdAt\" : \"2021-03-03T21:02:19.901444+00:00\" , \"userId\" : \"EdVMVKR4\" , \"gameId\" : 220015 , \"socialLinkSource\" : null , \"additionalInfo\" : {}, \"editedAt\" : \"2021-03-03T21:02:19.901444+00:00\" , \"socialLinkHandle\" : null , \"playerInfo\" : null } ], \"email\" : null , \"profilePictureSm\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserAvatar/74bfc8be9425a926a1f48d9b078509bc-Large.png?w=450&h=450\" , \"profilePicture\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserAvatar/74bfc8be9425a926a1f48d9b078509bc-Large.png?w=450&h=450\" , \"profilePictureLg\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserAvatar/74bfc8be9425a926a1f48d9b078509bc-Large.png?w=450&h=450\" , \"profilePictureBlur\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserAvatar/74bfc8be9425a926a1f48d9b078509bc-Large.png?w=450&h=450\" , \"profileBannerBlur\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserBanner/acaa9d0f78dd8cdd93f3ce44d14c0260-Hero.png?w=1500&h=500\" , \"profileBannerLg\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserBanner/acaa9d0f78dd8cdd93f3ce44d14c0260-Hero.png?w=1500&h=500\" , \"profileBannerSm\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserBanner/acaa9d0f78dd8cdd93f3ce44d14c0260-Hero.png?w=1500&h=500\" , \"joinDate\" : \"2020-07-27T14:07:28.336Z\" , \"steamId\" : null , \"userStatus\" : { \"content\" : null , \"customReactionId\" : 294765 , \"customReaction\" : { \"id\" : 294765 , \"name\" : \"ablobwobwork\" , \"png\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/d7cf013a4d01460a81186e65f1f8c12a-Full.webp?w=120&h=120&ia=1\" , \"webp\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/d7cf013a4d01460a81186e65f1f8c12a-Full.webp?w=120&h=120&ia=1\" , \"apng\" : null } }, \"moderationStatus\" : null , \"aboutInfo\" : { \"bio\" : \"i own the guilded API server, go join for bot discussion, libraries, and general programming whatnot guilded.gg/guilded-api\" , \"tagLine\" : \"computer user\" }, \"lastOnline\" : \"2021-03-08T00:24:49.144Z\" , \"serviceEmail\" : null , \"userPresenceStatus\" : 1 , \"userTransientStatus\" : null } User Presence Passing a value of <1 or >4 will render with a transparent \"presence circle\" in the client. Value Meaning 1 online 2 idle 3 dnd 4 offline/invisible Transient Status Field Type Description id integer gameId ?integer type enum the type of status (\"gamepresence\", ?) startedAt ISO8601 timestamp when this status started guildedClientId uuid User Status Object \ud83d\udd17 User Status Structure Field Type Description content ? user status content object the actual content of the status customReactionId ?integer the emoji's id that goes alongside the status customReaction? emoji object the emoji that goes alongside the status Example User Status { \"content\" : { \"object\" : \"value\" , \"document\" : { \"data\" : {}, \"nodes\" : [ { \"data\" : {}, \"type\" : \"paragraph\" , \"nodes\" : [ { \"leaves\" : [ { \"text\" : \"g.gg/guilded-api\" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" }, { \"data\" : { \"reaction\" : { \"id\" : 294745 , \"customReaction\" : { \"id\" : 294745 , \"name\" : \"blobcouple\" , \"png\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/448cff53087b93e72298bae9d47708f1-Full.webp?w=120&h=120\" , \"webp\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/448cff53087b93e72298bae9d47708f1-Full.webp?w=120&h=120\" , \"apng\" : null }, \"customReactionId\" : 294745 } }, \"type\" : \"reaction\" , \"nodes\" : [ { \"leaves\" : [ { \"text\" : \":blobcouple:\" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" } ], \"object\" : \"inline\" }, { \"leaves\" : [ { \"text\" : \"g.gg/blob-emoji \" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" }, { \"data\" : { \"reaction\" : { \"id\" : 294677 , \"customReaction\" : { \"id\" : 294677 , \"name\" : \"blobpats\" , \"png\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/ff03be6efe491bc934b1c217d70da9ce-Full.webp?w=120&h=120\" , \"webp\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/ff03be6efe491bc934b1c217d70da9ce-Full.webp?w=120&h=120\" , \"apng\" : null }, \"customReactionId\" : 294677 } }, \"type\" : \"reaction\" , \"nodes\" : [ { \"leaves\" : [ { \"text\" : \":blobpats:\" , \"marks\" : [], \"object\" : \"leaf\" } ], \"object\" : \"text\" } ], \"object\" : \"inline\" } ], \"object\" : \"block\" } ], \"object\" : \"document\" } }, \"customReactionId\" : 294765 , \"customReaction\" : { \"id\" : 294765 , \"name\" : \"ablobwobwork\" , \"png\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/d7cf013a4d01460a81186e65f1f8c12a-Full.webp?w=120&h=120&ia=1\" , \"webp\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/CustomReaction/d7cf013a4d01460a81186e65f1f8c12a-Full.webp?w=120&h=120&ia=1\" , \"apng\" : null } } User Status Content Object \ud83d\udd17 Status content is an example of \"stacked\" content, much like message data. It's pretty difficult to portray its structure in a table, so I've simply not done that. The useful part of the object is the document.nodes[0].nodes list. Refer to this example and parse it as you will. Get Current User \ud83d\udd17 GET /me Returns the user object of the requester's account. Query Params Field Type Description Required Default Value isLogin boolean whether or not you are logging in (i guess) false false Get User \ud83d\udd17 GET /users/{ user.id } Returns a user object for a given user ID. Modify Current User \ud83d\udd17 PUT /users/{ user.id }/profilev2 Modify the requester's user account settings. Returns a user object on success. Info All parameters to this endpoint are optional. JSON Params Field Type Description name string new username avatar string new avatar from url subdomain string new subdomain (profile url/slug) aboutInfo aboutInfo object new data about your profile aboutInfo Params Info All parameters here are nullable. When posting this to the API, this should go inside of a dictionary passed to Modify Current User . Field Type Description bio string the user's bio (\"About\") tagLine string the user's tagline (appears under their name on the profile) Leave Team \ud83d\udd17 DELETE /teams/{ team.id }/members/{ user.id } Leave a team. Returns an empty dictionary on success. Get User DMs \ud83d\udd17 GET /users/{ user.id }/channels Returns a list of DM channel objects on success. Create DM Channel \ud83d\udd17 POST /users/{ user.id }/channels Info user.id should be the current user's ID, not the user who you are starting a DM with. Warning You should not use this endpoint to DM everyone in a server. DMs should generally be initiated by a user action. For notifying a large number of users, consider a role mention. Returns a {\"channel\": dm_channel_object} , where dm_channel_object is the DM channel that was created. JSON Params Field Type Description users array array of {\"id\": user.id} , where user.id is a user's id to create a DM channel with Get User Posts \ud83d\udd17 GET /users/{ user.id }/posts Bug This endpoint returns an empty list. Get the list of posts this user has on their profile. Query Params Field Type Description Required Default Value maxPosts integer the maximum amount of posts to return (0-???) false 7 offset integer ? false 0","title":"Users"},{"location":"resources/user/#users","text":"Users are everywhere. They're in our servers, our DMs, our friends lists.. and in this documentation page!","title":"Users"},{"location":"resources/user/#user-object","text":"","title":"User Object"},{"location":"resources/user/#user-status-object","text":"","title":"User Status Object"},{"location":"resources/user/#user-status-content-object","text":"Status content is an example of \"stacked\" content, much like message data. It's pretty difficult to portray its structure in a table, so I've simply not done that. The useful part of the object is the document.nodes[0].nodes list. Refer to this example and parse it as you will.","title":"User Status Content Object"},{"location":"resources/user/#get-current-user","text":"GET /me Returns the user object of the requester's account.","title":"Get Current User"},{"location":"resources/user/#get-user","text":"GET /users/{ user.id } Returns a user object for a given user ID.","title":"Get User"},{"location":"resources/user/#modify-current-user","text":"PUT /users/{ user.id }/profilev2 Modify the requester's user account settings. Returns a user object on success. Info All parameters to this endpoint are optional.","title":"Modify Current User"},{"location":"resources/user/#leave-team","text":"DELETE /teams/{ team.id }/members/{ user.id } Leave a team. Returns an empty dictionary on success.","title":"Leave Team"},{"location":"resources/user/#get-user-dms","text":"GET /users/{ user.id }/channels Returns a list of DM channel objects on success.","title":"Get User DMs"},{"location":"resources/user/#create-dm-channel","text":"POST /users/{ user.id }/channels Info user.id should be the current user's ID, not the user who you are starting a DM with. Warning You should not use this endpoint to DM everyone in a server. DMs should generally be initiated by a user action. For notifying a large number of users, consider a role mention. Returns a {\"channel\": dm_channel_object} , where dm_channel_object is the DM channel that was created.","title":"Create DM Channel"},{"location":"resources/user/#get-user-posts","text":"GET /users/{ user.id }/posts Bug This endpoint returns an empty list. Get the list of posts this user has on their profile.","title":"Get User Posts"},{"location":"resources/webhook/","text":"Webhooks \ud83d\udd17 Webhooks are an easy way to post messages to team channels. They do not require any authentication to use other than the webhook URL itself (keep those secret!). Webhook Object \ud83d\udd17 Used to represent a webhook. Webhook Structure Field Type Description id uuid the id of the webhook name string the default name of the webhook token? string the webhook's token. required for execution channelId uuid the channel id this webhook is for teamId team id the team's id this webhook is for iconUrl ?string the default avatar of the webhook createdBy user id the user's id who created this webhook createdAt ISO8601 timestamp when this webhook was created deletedAt ?ISO8601 timestamp when this webhook was deleted Example Webhook { \"id\" : \"5b3723f8-c82e-404d-bb56-02bbfb242e47\" , \"name\" : \"cool webhook for cool people\" , \"token\" : \"yXEUjW1HskqGwsCWZBqGiYW4MGWAWq0sqCp8igYgQWcgNmYMu6gswa24CgoE2Akqk00YS8GYMkeqKUKKlAUYua\" , \"channelId\" : \"b1b9451a-f758-4e49-aa81-0b148939ffeb\" , \"teamId\" : \"4R5q39VR\" , \"iconUrl\" : \"https://s3-us-west-2.amazonaws.com/www.guilded.gg/UserAvatar/74bfc8be9425a926a1f48d9b078509bc-Large.png?w=450&h=450\" , \"createdBy\" : \"EdVMVKR4\" , \"createdAt\" : \"2021-03-18T23:39:21.320Z\" , \"deletedAt\" : null } Create Webhook \ud83d\udd17 POST /webhooks Create a new webhook. Returns a webhook object on success. JSON Params Field Type Description name string name of the webhook (1-??? characters) channelId channel id the channel's id to create the webhook in Get Channel Webhooks \ud83d\udd17 GET /teams/{ team.id }/channels/{ channel.id }/webhooks Bug This endpoint returns an empty list; {\"webhooks\": []} . Instead, use team.webhooks . Get a list of webhook objects. Modify Webhook \ud83d\udd17 PUT /webhooks/{ webhook.id } Modify a webhook. Returns the updated webhook object on success. Info The client performs this immediately after creating a webhook in order to actually fill all its fields appropriately. Info The client will always send name and channelId even if they were not changed. Try it out and see if they're required! JSON Params Field Type Description name string the default name of the webhook iconUrl image url image url for the default webhook avatar channelId channel id the new channel id this webhook should send to Delete Webhook \ud83d\udd17 DELETE /webhooks/{ webhook.id } Delete a webhook. Returns a partial webhook object on success with only id and deletedAt fields. Execute Webhook \ud83d\udd17 POST https://media.guilded.gg/webhooks/{ webhook.id }/{ webhook.token } Info This endpoint is supposedly similar enough to Discord's POST /webhooks/{webhook.id}/{webhook.token} that all you have to do is \"change a url\". However, many of the same fields are not supported (although they will not raise). Info You do not have to append /github onto your webhook URL for use with GitHub repos and organizations. The URL by itself will work as intended. Warning It is recommended not to choose all events for GitHub webhooks, as many of them are not supported and will result in an Error: event type [...] not supported whenever it happens. Send a message through a webhook. JSON/Form Params Field Type Description Required content string the message contents (up to 2000 characters) one of content, embeds embeds array up to 10 embed objects one of content, embeds","title":"Webhooks"},{"location":"resources/webhook/#webhooks","text":"Webhooks are an easy way to post messages to team channels. They do not require any authentication to use other than the webhook URL itself (keep those secret!).","title":"Webhooks"},{"location":"resources/webhook/#webhook-object","text":"Used to represent a webhook.","title":"Webhook Object"},{"location":"resources/webhook/#create-webhook","text":"POST /webhooks Create a new webhook. Returns a webhook object on success.","title":"Create Webhook"},{"location":"resources/webhook/#get-channel-webhooks","text":"GET /teams/{ team.id }/channels/{ channel.id }/webhooks Bug This endpoint returns an empty list; {\"webhooks\": []} . Instead, use team.webhooks . Get a list of webhook objects.","title":"Get Channel Webhooks"},{"location":"resources/webhook/#modify-webhook","text":"PUT /webhooks/{ webhook.id } Modify a webhook. Returns the updated webhook object on success. Info The client performs this immediately after creating a webhook in order to actually fill all its fields appropriately. Info The client will always send name and channelId even if they were not changed. Try it out and see if they're required!","title":"Modify Webhook"},{"location":"resources/webhook/#delete-webhook","text":"DELETE /webhooks/{ webhook.id } Delete a webhook. Returns a partial webhook object on success with only id and deletedAt fields.","title":"Delete Webhook"},{"location":"resources/webhook/#execute-webhook","text":"POST https://media.guilded.gg/webhooks/{ webhook.id }/{ webhook.token } Info This endpoint is supposedly similar enough to Discord's POST /webhooks/{webhook.id}/{webhook.token} that all you have to do is \"change a url\". However, many of the same fields are not supported (although they will not raise). Info You do not have to append /github onto your webhook URL for use with GitHub repos and organizations. The URL by itself will work as intended. Warning It is recommended not to choose all events for GitHub webhooks, as many of them are not supported and will result in an Error: event type [...] not supported whenever it happens. Send a message through a webhook.","title":"Execute Webhook"},{"location":"topics/community-resources/","text":"Community Resources \ud83d\udd17 Libraries \ud83d\udd17 The following libraries are not approved, created, or endorsed by Guilded. Many of these libraries are represented in the community-driven server for developers . There you'll find community members who can help answer questions about the API, community libraries, bot creation, and other development questions. Guilded Libraries Name Language guilded.js TypeScript gapi TypeScript guilded.js (deprecated) JavaScript guilded.gg.js JavaScript Guildava Java Guilded.NET C# guilded.py Python Embed Visualizers \ud83d\udd17 From an API standpoint, Discord and Guilded use the exact same Embed format. They do look a bit different in the client, but you can use the following resources to easily make some neato JSON for use in your Guilded messages. LeoV's Embed Visualizer Discohook (click on \"JSON Data Editor\" when you're done)","title":"Community Resources"},{"location":"topics/community-resources/#community-resources","text":"","title":"Community Resources"},{"location":"topics/community-resources/#libraries","text":"The following libraries are not approved, created, or endorsed by Guilded. Many of these libraries are represented in the community-driven server for developers . There you'll find community members who can help answer questions about the API, community libraries, bot creation, and other development questions.","title":"Libraries"},{"location":"topics/community-resources/#embed-visualizers","text":"From an API standpoint, Discord and Guilded use the exact same Embed format. They do look a bit different in the client, but you can use the following resources to easily make some neato JSON for use in your Guilded messages. LeoV's Embed Visualizer Discohook (click on \"JSON Data Editor\" when you're done)","title":"Embed Visualizers"},{"location":"topics/gateway/","text":"Gateway \ud83d\udd17 The Gateway is Guilded's form of real-time communication over secure WebSockets. Clients will receive events and data over the gateway they are connected to and send data over the REST API. The API for interacting with Gateways is complex and fairly unforgiving, therefore it's highly recommended you read all of the following documentation before writing a custom implementation. Payloads \ud83d\udd17 Gateway Payload Structure The only constant field you will receive is type - the event's name. Except when connecting, type will not be null ; it will simply not be included. The rest of the event's data is included top-level with the event payload (e.g. no data field which contains it all). For reference purposes, your typical Gateway payload will look something like this: { \"type\" : \"EventName\" , // your savi n g grace o f co ns is ten cy i n Guilded payloads \"somethingId\" : \"ffd717d5-73f1-11eb-8d50-6245b4f631c5\" , \"listOfThings\" : [], \"needlesslyComplicatedObject\" : { \"content\" : { \"messageContent\" : \"I feel bad for the devs who had to make the client.\" } }, \"happenedAt\" : \"ISO8601.T.ime:sta:mp\" , \"imageLink\" : \"https://the-entire-url.to-the-file-on.aws/because_lol-Large.webp\" , \"madeBy\" : \"5A2B60\" } Connecting to the Gateway \ud83d\udd17 Connecting \ud83d\udd17 Gateway URL Params Field Type Description Accepted Values jwt string Authentication stuff? 'undefined' EIO integer Engine.IO version 3 transport string The type of transport 'websocket' ?teamId * string The team's socket to connect to a team ID * This is for team-specific events like member and channel updates. I have yet to get this to work personally, but it supposedly does. Gateway Headers Header Description Accepted Values cookie your authentication cookie a cookie gotten from logging in via REST The first step in establishing connectivity to the gateway is to construct your gateway URL. Options are pretty limited, so you should end up with something like wss://api.guilded.gg/socket.io/?jwt=undefined&EIO=3&transport=websocket . You can now open a websocket connection to the URL you have created (or copied from this page). Once connected, the client should immediately receive a \"hello\"-type payload , with information on the connection's heartbeat interval. Example Gateway Hello { \"sid\" : \"your_session_id\" , \"upgrades\" : [], \"pingInterval\" : 25000 , \"pingTimeout\" : 5000 } Heartbeating \ud83d\udd17 The client should now begin sending heartbeat payloads (the string '2') every pingInterval milliseconds, until the connection is eventually closed or terminated, from now until the end of time, or forever hold your peace. It is unknown whether Guilded will suddenly request you for a heartbeat, so documentation for this case is not available. Example Gateway Heartbeat ACK \"3\" Disconnections \ud83d\udd17 If the gateway ever issues a disconnect to your client, it will provide a close event code that you can use to properly handle the disconnection. A full list of these close codes can be found in the Response Codes documentation. When you close the connection to the gateway with the close code 1000 or 1001, your session will be invalidated and your bot will appear offline. If you simply close the TCP connection, or use a different close code, the bot session will remain active and timeout after a few minutes. This can be useful for a reconnect, which will resume the previous session. todo: verify that above applies Rate Limiting \ud83d\udd17 This section is about Gateway rate limits, not HTTP API rate limits . Currently unknown. See above. Commands and Events \ud83d\udd17 Commands are requests made to the gateway socket by a client. Gateway Commands name description Heartbeat maintains an active gateway connection Trigger Typing shows your typing indicator in a channel Events are payloads sent over the socket to a client that correspond to events in Discord. Gateway Events The TeamSocketReconnected event may be misspelled. Name Description Hello defines the heartbeat DMChatChannelCreated new dm channel created ChatChannelBroadcastCall ChatChannelBroadcastCallResponse ChatChannelUpdated team channel was updated ChatChannelTyping user began typing in a channel ChatChannelHidden team channel was hidden ChatChannelNicknameChanged ChatMessageCreated message was sent ChatMessageUpdated message was edited ChatMessageDeleted message was deleted ChatMessagesDeleted multiple messages were deleted at once ChatMessageReactionAdded user reacted to a message ChatMessageReactionDeleted user removed a reaction to a message ChatPinnedMessageCreated message was pinned ChatPinnedMessageDeleted message was unpinned TemporalChannelCreated thread was created TemporalChannelUsersAdded user was added to a thread TeamSocketReconnected client reconnected to a team websocket TeamRolesUpdated role was created/removed/edited in a team TeamXpAdded TeamXpSet TeamReactionsUpdated TeamContentReactionsAdded TeamContentReactionsRemoved TeamContentDeleted TeamMessagesDeleted TeamThreadCreated TeamThreadReplyCreated TeamEventModified TeamEventCreated TeamEventRemoved TeamMemberJoined member joined a team TeamMemberRemoved user removed from a team TeamMembersRemoved user were pruned from a team TeamMutedMembersUpdated member was muted or unmuted TeamDeafenedMembersUpdated member was deafened or undeafened TeamMemberAliasUpdated member's nickname was set or reset TeamSubscriptionInfoUpdated probably something about guilded gold TeamStreamInfoUpdated member started or stopped video streaming TeamContentOperationsApplied TeamContentReplaced TeamContentReplyAdded TeamContentReplyRemoved TeamAvailabilitiesUpdated TeamChannelAvailabilitiesUpdated TeamChannelAvailabilitiesRemoved TeamMemberUpdated member was updated TeamMemberSocialLinkUpdated social media info for a team was updated TeamGameAdded game was added to a team TeamApplicationCreated user applied to join a team TeamApplicationRemoved user's application was deleted (or denied?) TeamApplicationUpdated user's application was updated TeamUpdated team was updated TeamChannelCreated new team channel was created TeamChannelUpdated team channel was updated TeamChannelPrioritiesUpdated team channel permissions (or position?) was updated TeamChannelCategoryPrioritiesUpdated category permissions (or position?) was updated TeamChannelDeleted team channel was deleted TeamChannelsDeleted multiple team channels were deleted TeamChannelCategoryCreated category was created TeamChannelCategoryUpdated category was updated TeamChannelCategoryDeleted category was deleted TeamChannelCategoriesDeleted multiple categories were deleted TeamChannelCategoryGroupMoved category position was changed TeamWebhookCreated webhook was added to a team TeamWebhookUpdated webhook was updated TeamBotCreated flow-bot was added to a team TeamBotUpdated flow-bot's info was updated TeamBotFlowUpdated flow-bot's flow was updated TeamGroupPrioritiesUpdated TeamGroupDeleted group was deleted TeamGroupArchived group was archived TeamGroupRestored group was restored TeamGroupFollowed user followed a group TeamStripeAccountOnboarded TeamServerSubscriptionPlanCreated TeamServerSubscriptionPlanUpdated TeamServerSubscriptionPlanDeleted TeamServerSubscriptionUpdated UserSocketConnected UserSocketConnectError UserSocketReconnected UserSocketReconnecting UserAliasUpdated TeamMemberStreamUpdated UserPresenceManuallySet UserPresenceReceived UserPinged UserUpdated UserTeamsUpdated UserSocialLinkUpdated UserTeamSectionUnreadCountIncremented UserScannedMobileDownloadQr UserStreamsVisibilityUpdated TeamChannelContentCreated TeamChannelContentCreatedSilent TeamChannelContentReplyCreated TeamChannelContentReplyUpdated TeamChannelContentReplyDeleted TeamChannelContentUpdated TeamChannelContentDeleted TeamChannelArchived TeamChannelRestored TeamChannelVoiceParticipantAdded TeamChannelVoiceParticipantRemoved TeamChannelVoiceUserClientConnected TeamChannelStreamUserClientConnected TeamChannelStreamAdded TeamChannelStreamRemoved TeamChannelStreamActive TeamChannelStreamEnded TeamChannelVoiceUserMoved ChannelSeen client marked channel as read ChannelContentSeen ^ ? ChannelBadged ChannelUnbadged TeamGroupCreated TeamGroupUpdated TeamGroupDeletedForUser TeamUserGroupPrioritiesUpdated TeamGroupMarkedAsRead MediaUploadProgress VoiceChannelRegionPingReport Event Names \ud83d\udd17 Event names are sent with each word capitalized and with no spaces/separators. For instance, Message Create would be ChatMessageCreated . Most of them are not exactly easily guessable, so the literal event name is preferred in this documentation for utility purposes. Trigger Typing Begin \"typing\" in a specific channel. Send your payload as a string prefixed with \"42\". Like so: 42 [ \"ChatChannelTyping\" , { \"channelId\" : \"channelId\" }] Connecting \ud83d\udd17 Hello Sent on connection to the websocket. Defines the heartbeat interval that the client should heartbeat to. Hello Structure Field Type Description sid string your session's id upgrades list possibly stuff like guilded gold that you've bought pingInterval integer the interval (in milliseconds) the client should heartbeat with pingTimeout integer how long (in milliseconds) guilded will wait without a heartbeat before disconnecting the client Example Hello { \"sid\" : \"your_session_id\" , \"upgrades\" : [], \"pingInterval\" : 25000 , \"pingTimeout\" : 5000 } todo: fact check most stuff below Channels \ud83d\udd17 DMChatChannelCreated Someone has created a new DM channel with you. Congrats! This is also sent when you create the channel, which is less exciting. You'll get a channel object in the payload.","title":"Gateway"},{"location":"topics/gateway/#gateway","text":"The Gateway is Guilded's form of real-time communication over secure WebSockets. Clients will receive events and data over the gateway they are connected to and send data over the REST API. The API for interacting with Gateways is complex and fairly unforgiving, therefore it's highly recommended you read all of the following documentation before writing a custom implementation.","title":"Gateway"},{"location":"topics/gateway/#payloads","text":"","title":"Payloads"},{"location":"topics/gateway/#connecting-to-the-gateway","text":"","title":"Connecting to the Gateway"},{"location":"topics/gateway/#connecting","text":"","title":"Connecting"},{"location":"topics/gateway/#heartbeating","text":"The client should now begin sending heartbeat payloads (the string '2') every pingInterval milliseconds, until the connection is eventually closed or terminated, from now until the end of time, or forever hold your peace. It is unknown whether Guilded will suddenly request you for a heartbeat, so documentation for this case is not available.","title":"Heartbeating"},{"location":"topics/gateway/#disconnections","text":"If the gateway ever issues a disconnect to your client, it will provide a close event code that you can use to properly handle the disconnection. A full list of these close codes can be found in the Response Codes documentation. When you close the connection to the gateway with the close code 1000 or 1001, your session will be invalidated and your bot will appear offline. If you simply close the TCP connection, or use a different close code, the bot session will remain active and timeout after a few minutes. This can be useful for a reconnect, which will resume the previous session. todo: verify that above applies","title":"Disconnections"},{"location":"topics/gateway/#rate-limiting","text":"This section is about Gateway rate limits, not HTTP API rate limits . Currently unknown. See above.","title":"Rate Limiting"},{"location":"topics/gateway/#commands-and-events","text":"Commands are requests made to the gateway socket by a client.","title":"Commands and Events"},{"location":"topics/gateway/#event-names","text":"Event names are sent with each word capitalized and with no spaces/separators. For instance, Message Create would be ChatMessageCreated . Most of them are not exactly easily guessable, so the literal event name is preferred in this documentation for utility purposes.","title":"Event Names"},{"location":"topics/gateway/#connecting_1","text":"","title":"Connecting"},{"location":"topics/gateway/#channels","text":"","title":"Channels"},{"location":"topics/status-codes/","text":"Status Codes in the API \ud83d\udd17 Gateway \ud83d\udd17 Specifics of the Gateway's close codes are not known - if custom codes are even used at all. For the time being, refer to the standard WebSocket close codes for what any given code you may recieve means. HTTP \ud83d\udd17 Similarly to any other REST API, HTTP response codes are returned based on the success of each of your requests. The following table can be used as a reference. It is a modified version of Discord's table for the same purpose . HTTP Response Codes Code Meaning 200 (OK) The request completed successfully. 201 (CREATED) The entity was created successfully. 204 (NO CONTENT) The request completed successfully and returned no content. 304 (NOT MODIFIED) The entity was not modified (no action was taken). 400 (BAD REQUEST) The request was improperly formatted, or the server couldn't understand it. 401 (UNAUTHORIZED) Proper authorization was not passed or passed improperly. 403 (FORBIDDEN) The authorization you passed is not allowed to access this resource. 404 (NOT FOUND) The resource at the location specified doesn't exist. 405 (METHOD NOT ALLOWED) The HTTP method used is not valid for the location specified. 429 (TOO MANY REQUESTS) You are being rate limited. 502 (GATEWAY UNAVAILABLE) There was not a gateway available to process your request. Wait a bit and retry. 5xx (SERVER ERROR) The server had an error processing your request (these are rare).","title":"Status Codes in the API"},{"location":"topics/status-codes/#status-codes-in-the-api","text":"","title":"Status Codes in the API"},{"location":"topics/status-codes/#gateway","text":"Specifics of the Gateway's close codes are not known - if custom codes are even used at all. For the time being, refer to the standard WebSocket close codes for what any given code you may recieve means.","title":"Gateway"},{"location":"topics/status-codes/#http","text":"Similarly to any other REST API, HTTP response codes are returned based on the success of each of your requests. The following table can be used as a reference. It is a modified version of Discord's table for the same purpose .","title":"HTTP"}]}